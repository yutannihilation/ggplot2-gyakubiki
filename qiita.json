[{"rendered_body":"<blockquote>\n<p>本記事は <a href=\"http://qiita.com/tags/ggplot2%E9%80%86%E5%BC%95%E3%81%8D/items\">ggplot2逆引き</a> プロジェクトの一環として、Stack Oveflow の下記記事を翻訳したものです。<br>\n<a href=\"http://stackoverflow.com/questions/6017460/ggplot-geom-text-with-dodged-barplot\">ggplot: geom_text with dodged barplot</a></p>\n</blockquote>\n\n<h2>\n<span id=\"質問\" class=\"fragment\"></span><a href=\"#%E8%B3%AA%E5%95%8F\"><i class=\"fa fa-link\"></i></a>質問</h2>\n\n<p>タイトル通りのことをやりたくて、自分でやってみたのですが、ダメです。</p>\n\n<p>まずはデータを用意します。</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">R</span></div>\n<div class=\"highlight\"><pre>data <span class=\"o\">&lt;-</span> <span class=\"kt\">data.frame</span><span class=\"p\">(</span>\n  variable <span class=\"o\">=</span> <span class=\"kp\">gl</span><span class=\"p\">(</span><span class=\"m\">5</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">,</span> labels <span class=\"o\">=</span> <span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"s\">\"vma\"</span><span class=\"p\">,</span> <span class=\"s\">\"vla\"</span><span class=\"p\">,</span> <span class=\"s\">\"ia\"</span><span class=\"p\">,</span> <span class=\"s\">\"fma\"</span><span class=\"p\">,</span> <span class=\"s\">\"fla\"</span><span class=\"p\">)),</span>\n  ustanova <span class=\"o\">=</span> <span class=\"kp\">gl</span><span class=\"p\">(</span><span class=\"m\">2</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">10</span><span class=\"p\">,</span> labels <span class=\"o\">=</span> <span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"s\">\"srednja skola\"</span><span class=\"p\">,</span> <span class=\"s\">\"fakultet\"</span><span class=\"p\">)),</span>\n  all <span class=\"o\">=</span> <span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"m\">42.9</span><span class=\"p\">,</span> <span class=\"m\">38.7</span><span class=\"p\">,</span> <span class=\"m\">37.8</span><span class=\"p\">,</span> <span class=\"m\">33.7</span><span class=\"p\">,</span> <span class=\"m\">29.5</span><span class=\"p\">,</span> <span class=\"m\">26.1</span><span class=\"p\">,</span> <span class=\"m\">27.9</span><span class=\"p\">,</span> <span class=\"m\">23.9</span><span class=\"p\">,</span> <span class=\"m\">33.2</span><span class=\"p\">,</span> <span class=\"m\">26.9</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n\ndata\n</pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"\">\n<div class=\"code-lang\"><span class=\"bold\">結果</span></div>\n<div class=\"highlight\"><pre><span class=\"w\">   </span><span class=\"vg\">variable</span><span class=\"w\">      </span><span class=\"vg\">ustanova</span><span class=\"w\">  </span><span class=\"vg\">all</span>\n<span class=\"nl\">1</span><span class=\"w\">       </span><span class=\"vg\">vma</span><span class=\"w\"> </span><span class=\"vg\">srednja</span><span class=\"w\"> </span><span class=\"vg\">skola</span><span class=\"w\"> </span><span class=\"mf\">42.9</span>\n<span class=\"nl\">2</span><span class=\"w\">       </span><span class=\"vg\">vma</span><span class=\"w\">      </span><span class=\"vg\">fakultet</span><span class=\"w\"> </span><span class=\"mf\">38.7</span>\n<span class=\"nl\">3</span><span class=\"w\">       </span><span class=\"vg\">vla</span><span class=\"w\"> </span><span class=\"vg\">srednja</span><span class=\"w\"> </span><span class=\"vg\">skola</span><span class=\"w\"> </span><span class=\"mf\">37.8</span>\n<span class=\"nl\">4</span><span class=\"w\">       </span><span class=\"vg\">vla</span><span class=\"w\">      </span><span class=\"vg\">fakultet</span><span class=\"w\"> </span><span class=\"mf\">33.7</span>\n<span class=\"nl\">5</span><span class=\"w\">        </span><span class=\"vg\">ia</span><span class=\"w\"> </span><span class=\"vg\">srednja</span><span class=\"w\"> </span><span class=\"vg\">skola</span><span class=\"w\"> </span><span class=\"mf\">29.5</span>\n<span class=\"nl\">6</span><span class=\"w\">        </span><span class=\"vg\">ia</span><span class=\"w\">      </span><span class=\"vg\">fakultet</span><span class=\"w\"> </span><span class=\"mf\">26.1</span>\n<span class=\"nl\">7</span><span class=\"w\">       </span><span class=\"vg\">fma</span><span class=\"w\"> </span><span class=\"vg\">srednja</span><span class=\"w\"> </span><span class=\"vg\">skola</span><span class=\"w\"> </span><span class=\"mf\">27.9</span>\n<span class=\"nl\">8</span><span class=\"w\">       </span><span class=\"vg\">fma</span><span class=\"w\">      </span><span class=\"vg\">fakultet</span><span class=\"w\"> </span><span class=\"mf\">23.9</span>\n<span class=\"nl\">9</span><span class=\"w\">       </span><span class=\"vg\">fla</span><span class=\"w\"> </span><span class=\"vg\">srednja</span><span class=\"w\"> </span><span class=\"vg\">skola</span><span class=\"w\"> </span><span class=\"mf\">33.2</span>\n<span class=\"nl\">10</span><span class=\"w\">      </span><span class=\"vg\">fla</span><span class=\"w\">      </span><span class=\"vg\">fakultet</span><span class=\"w\"> </span><span class=\"mf\">26.9</span>\n</pre></div>\n</div>\n\n<p>集合棒グラフを作り、<code>coord_flip()</code> で横向きにして、棒の内側にテキストを付けたいのですが、</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">R</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">library</span><span class=\"p\">(</span>ggplot2<span class=\"p\">)</span>\nggplot<span class=\"p\">(</span>data<span class=\"p\">)</span> <span class=\"o\">+</span> \n  geom_bar<span class=\"p\">(</span>aes<span class=\"p\">(</span>x<span class=\"o\">=</span>variable<span class=\"p\">,</span> y<span class=\"o\">=</span><span class=\"kp\">all</span><span class=\"p\">,</span> fill<span class=\"o\">=</span>ustanova<span class=\"p\">),</span> position<span class=\"o\">=</span><span class=\"s\">\"dodge\"</span><span class=\"p\">,</span> stat<span class=\"o\">=</span><span class=\"s\">\"identity\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  geom_text<span class=\"p\">(</span>aes<span class=\"p\">(</span>x<span class=\"o\">=</span>variable<span class=\"p\">,</span> y<span class=\"o\">=</span><span class=\"kp\">all</span><span class=\"p\">,</span> label<span class=\"o\">=</span><span class=\"kp\">sprintf</span><span class=\"p\">(</span><span class=\"s\">\"%2.1f\"</span><span class=\"p\">,</span> <span class=\"kp\">all</span><span class=\"p\">)))</span> <span class=\"o\">+</span> \n  coord_flip<span class=\"p\">()</span>\n</pre></div>\n</div>\n\n<p>結果はこのようになります。</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/2570/bc26cbdb-ccf8-0815-8b8f-d30e3eeaeb44.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/2570/bc26cbdb-ccf8-0815-8b8f-d30e3eeaeb44.png\" alt=\"bar1.png\"></a></p>\n\n<p>私の質問は非常に基礎的なことかもしれません。<br>\nテキストラベルが棒に「ついていく」ようにしたいのです。<br>\nラベルは y 軸に対しては正しく配置されています。<br>\nしかし、どのようにすれば x 軸に対しても正しく配置されるのでしょうか？</p>\n\n<h2>\n<span id=\"回答\" class=\"fragment\"></span><a href=\"#%E5%9B%9E%E7%AD%94\"><i class=\"fa fa-link\"></i></a>回答</h2>\n\n<p>こういうことかな？</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">R</span></div>\n<div class=\"highlight\"><pre>ggplot<span class=\"p\">(</span>data<span class=\"p\">)</span> <span class=\"o\">+</span> \n  geom_bar<span class=\"p\">(</span>aes<span class=\"p\">(</span>x<span class=\"o\">=</span>variable<span class=\"p\">,</span> y<span class=\"o\">=</span><span class=\"kp\">all</span><span class=\"p\">,</span> fill<span class=\"o\">=</span>ustanova<span class=\"p\">),</span> stat<span class=\"o\">=</span><span class=\"s\">\"identity\"</span><span class=\"p\">,</span> position<span class=\"o\">=</span><span class=\"s\">\"dodge\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  geom_text<span class=\"p\">(</span>aes<span class=\"p\">(</span>x<span class=\"o\">=</span>variable<span class=\"p\">,</span> y<span class=\"o\">=</span><span class=\"kp\">all</span><span class=\"p\">,</span> group<span class=\"o\">=</span>ustanova<span class=\"p\">,</span> label<span class=\"o\">=</span><span class=\"kp\">sprintf</span><span class=\"p\">(</span><span class=\"s\">\"%2.1f\"</span><span class=\"p\">,</span> <span class=\"kp\">all</span><span class=\"p\">)),</span> \n            position<span class=\"o\">=</span>position_dodge<span class=\"p\">(</span>width<span class=\"o\">=</span><span class=\"m\">0.9</span><span class=\"p\">))</span> <span class=\"o\">+</span>\n  coord_flip<span class=\"p\">()</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/2570/f5f61adf-8960-b3d8-f66b-0014eb2387d6.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/2570/f5f61adf-8960-b3d8-f66b-0014eb2387d6.png\" alt=\"bar2.png\"></a></p>\n\n<p>ポイントは <code>position = \"dodge\"</code> の代わりに <code>position = position_dodge(width=0.9)</code> を使うことと、<code>geom_text()</code> の中で <code>group</code> を指定してやることです。<br>\n<code>position = \"dodge\"</code> は <code>position_dodge()</code> のパラメータを指定しない単なるショートカットにすぎません。</p>\n\n<h2>\n<span id=\"補足\" class=\"fragment\"></span><a href=\"#%E8%A3%9C%E8%B6%B3\"><i class=\"fa fa-link\"></i></a>補足</h2>\n\n<p>テキストラベルを棒の「内側に」表示したい場合は、<code>hjust</code> や <code>vjust</code> を使います。</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">R</span></div>\n<div class=\"highlight\"><pre>ggplot<span class=\"p\">(</span>data<span class=\"p\">)</span> <span class=\"o\">+</span> \n  geom_bar<span class=\"p\">(</span>aes<span class=\"p\">(</span>x<span class=\"o\">=</span>variable<span class=\"p\">,</span> y<span class=\"o\">=</span><span class=\"kp\">all</span><span class=\"p\">,</span> fill<span class=\"o\">=</span>ustanova<span class=\"p\">),</span> stat<span class=\"o\">=</span><span class=\"s\">\"identity\"</span><span class=\"p\">,</span> position<span class=\"o\">=</span><span class=\"s\">\"dodge\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  geom_text<span class=\"p\">(</span>aes<span class=\"p\">(</span>x<span class=\"o\">=</span>variable<span class=\"p\">,</span> y<span class=\"o\">=</span><span class=\"kp\">all</span><span class=\"p\">,</span> group<span class=\"o\">=</span>ustanova<span class=\"p\">,</span> label<span class=\"o\">=</span><span class=\"kp\">sprintf</span><span class=\"p\">(</span><span class=\"s\">\"%2.1f\"</span><span class=\"p\">,</span> <span class=\"kp\">all</span><span class=\"p\">),</span> hjust<span class=\"o\">=</span><span class=\"m\">1.4</span><span class=\"p\">),</span> \n            position<span class=\"o\">=</span>position_dodge<span class=\"p\">(</span>width<span class=\"o\">=</span><span class=\"m\">0.9</span><span class=\"p\">))</span> <span class=\"o\">+</span>\n  coord_flip<span class=\"p\">()</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/2570/14d66693-9948-69d1-4c01-a56b6a649ba8.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/2570/14d66693-9948-69d1-4c01-a56b6a649ba8.png\" alt=\"bar3.png\"></a></p>\n\n<p>また、積み上げ棒グラフに対して同様のことを行うには、次のように書きます。</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">R</span></div>\n<div class=\"highlight\"><pre>ggplot<span class=\"p\">(</span>data<span class=\"p\">)</span> <span class=\"o\">+</span> \n  geom_bar<span class=\"p\">(</span>aes<span class=\"p\">(</span>x<span class=\"o\">=</span>variable<span class=\"p\">,</span> y<span class=\"o\">=</span><span class=\"kp\">all</span><span class=\"p\">,</span> fill<span class=\"o\">=</span>ustanova<span class=\"p\">),</span> stat<span class=\"o\">=</span><span class=\"s\">\"identity\"</span><span class=\"p\">,</span> position<span class=\"o\">=</span><span class=\"s\">\"stack\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  geom_text<span class=\"p\">(</span>aes<span class=\"p\">(</span>x<span class=\"o\">=</span>variable<span class=\"p\">,</span> y<span class=\"o\">=</span><span class=\"kp\">all</span><span class=\"p\">,</span> label<span class=\"o\">=</span><span class=\"kp\">sprintf</span><span class=\"p\">(</span><span class=\"s\">\"%2.1f\"</span><span class=\"p\">,</span> <span class=\"kp\">all</span><span class=\"p\">)),</span> position<span class=\"o\">=</span><span class=\"s\">\"stack\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  coord_flip<span class=\"p\">()</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/2570/5864f736-4073-d4fc-90f5-8f9307ab8e45.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/2570/5864f736-4073-d4fc-90f5-8f9307ab8e45.png\" alt=\"bar4.png\"></a></p>\n\n<h2>\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h2>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/6017460/ggplot-geom-text-with-dodged-barplot\">ggplot: geom_text with dodged barplot</a></li>\n<li><a href=\"http://stackoverflow.com/questions/30634148/issue-with-geom-text-when-using-position-dodge\">Issue with geom_text when using position_dodge</a></li>\n</ul>\n","body":"> 本記事は [ggplot2逆引き](http://qiita.com/tags/ggplot2%E9%80%86%E5%BC%95%E3%81%8D/items) プロジェクトの一環として、Stack Oveflow の下記記事を翻訳したものです。\n> [ggplot: geom_text with dodged barplot](http://stackoverflow.com/questions/6017460/ggplot-geom-text-with-dodged-barplot)\n\n## 質問\n\nタイトル通りのことをやりたくて、自分でやってみたのですが、ダメです。\n\nまずはデータを用意します。\n\n```r:R\ndata <- data.frame(\n  variable = gl(5, 2, labels = c(\"vma\", \"vla\", \"ia\", \"fma\", \"fla\")),\n  ustanova = gl(2, 1, 10, labels = c(\"srednja skola\", \"fakultet\")),\n  all = c(42.9, 38.7, 37.8, 33.7, 29.5, 26.1, 27.9, 23.9, 33.2, 26.9)\n)\n\ndata\n```\n\n```:結果\n   variable      ustanova  all\n1       vma srednja skola 42.9\n2       vma      fakultet 38.7\n3       vla srednja skola 37.8\n4       vla      fakultet 33.7\n5        ia srednja skola 29.5\n6        ia      fakultet 26.1\n7       fma srednja skola 27.9\n8       fma      fakultet 23.9\n9       fla srednja skola 33.2\n10      fla      fakultet 26.9\n```\n\n集合棒グラフを作り、`coord_flip()` で横向きにして、棒の内側にテキストを付けたいのですが、\n\n```r:R\nlibrary(ggplot2)\nggplot(data) + \n  geom_bar(aes(x=variable, y=all, fill=ustanova), position=\"dodge\", stat=\"identity\") +\n  geom_text(aes(x=variable, y=all, label=sprintf(\"%2.1f\", all))) + \n  coord_flip()\n```\n\n結果はこのようになります。\n\n![bar1.png](https://qiita-image-store.s3.amazonaws.com/0/2570/bc26cbdb-ccf8-0815-8b8f-d30e3eeaeb44.png)\n\n私の質問は非常に基礎的なことかもしれません。\nテキストラベルが棒に「ついていく」ようにしたいのです。\nラベルは y 軸に対しては正しく配置されています。\nしかし、どのようにすれば x 軸に対しても正しく配置されるのでしょうか？\n\n## 回答\n\nこういうことかな？\n\n```r:R\nggplot(data) + \n  geom_bar(aes(x=variable, y=all, fill=ustanova), stat=\"identity\", position=\"dodge\") +\n  geom_text(aes(x=variable, y=all, group=ustanova, label=sprintf(\"%2.1f\", all)), \n            position=position_dodge(width=0.9)) +\n  coord_flip()\n```\n\n![bar2.png](https://qiita-image-store.s3.amazonaws.com/0/2570/f5f61adf-8960-b3d8-f66b-0014eb2387d6.png)\n\nポイントは `position = \"dodge\"` の代わりに `position = position_dodge(width=0.9)` を使うことと、`geom_text()` の中で `group` を指定してやることです。\n`position = \"dodge\"` は `position_dodge()` のパラメータを指定しない単なるショートカットにすぎません。\n\n## 補足\n\nテキストラベルを棒の「内側に」表示したい場合は、`hjust` や `vjust` を使います。\n\n```r:R\nggplot(data) + \n  geom_bar(aes(x=variable, y=all, fill=ustanova), stat=\"identity\", position=\"dodge\") +\n  geom_text(aes(x=variable, y=all, group=ustanova, label=sprintf(\"%2.1f\", all), hjust=1.4), \n            position=position_dodge(width=0.9)) +\n  coord_flip()\n```\n\n![bar3.png](https://qiita-image-store.s3.amazonaws.com/0/2570/14d66693-9948-69d1-4c01-a56b6a649ba8.png)\n\nまた、積み上げ棒グラフに対して同様のことを行うには、次のように書きます。\n\n```r:R\nggplot(data) + \n  geom_bar(aes(x=variable, y=all, fill=ustanova), stat=\"identity\", position=\"stack\") +\n  geom_text(aes(x=variable, y=all, label=sprintf(\"%2.1f\", all)), position=\"stack\") +\n  coord_flip()\n```\n\n![bar4.png](https://qiita-image-store.s3.amazonaws.com/0/2570/5864f736-4073-d4fc-90f5-8f9307ab8e45.png)\n\n## 参考\n\n- [ggplot: geom_text with dodged barplot](http://stackoverflow.com/questions/6017460/ggplot-geom-text-with-dodged-barplot)\n- [Issue with geom_text when using position_dodge](http://stackoverflow.com/questions/30634148/issue-with-geom-text-when-using-position-dodge)\n","coediting":false,"created_at":"2015-08-10T19:00:39+09:00","id":"267ce2ab0acc319599ff","private":false,"tags":[{"name":"R","versions":[]},{"name":"ggplot2逆引き","versions":[]}],"title":"ggplot2 で geom_text() を使って集合棒グラフにラベルを付けたい #rstatsj","updated_at":"2015-08-10T20:42:12+09:00","url":"http://qiita.com/hoxo_m/items/267ce2ab0acc319599ff","user":{"description":"ホクソエム (hoxo_m) は架空のデータ分析者であり、日本の若手のデータ分析者集団のペンネームである。当初このデータ分析者集団は秘密結社として活動し、ホクソエムを一個人として活動させ続けた。\r\nhttps://twitter.com/teramonagi/lists/list","facebook_id":"","followees_count":26,"followers_count":84,"github_login_name":"hoxo-m","id":"hoxo_m","items_count":147,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":2570,"profile_image_url":"https://avatars.githubusercontent.com/u/7479163?","twitter_screen_name":"hoxo_m","website_url":"http://d.hatena.ne.jp/hoxo_m/"}},{"rendered_body":"<div class=\"code-frame\" data-lang=\"r\"><div class=\"highlight\"><pre>q <span class=\"o\">+</span> theme<span class=\"p\">(</span>axis.text.x <span class=\"o\">=</span> element_text<span class=\"p\">(</span>angle <span class=\"o\">=</span> <span class=\"m\">90</span><span class=\"p\">,</span> hjust <span class=\"o\">=</span> <span class=\"m\">1</span><span class=\"p\">))</span>\n</pre></div></div>\n\n<p>参考：<a href=\"http://stackoverflow.com/questions/1330989/rotating-and-spacing-axis-labels-in-ggplot2\">Rotating and spacing axis labels in ggplot2</a></p>\n","body":"```r\nq + theme(axis.text.x = element_text(angle = 90, hjust = 1))\n```\n\n参考：[Rotating and spacing axis labels in ggplot2](http://stackoverflow.com/questions/1330989/rotating-and-spacing-axis-labels-in-ggplot2)\n","coediting":false,"created_at":"2013-10-05T11:30:07+09:00","id":"1a0b71b5868686311747","private":false,"tags":[{"name":"R","versions":[]},{"name":"ggplot2逆引き","versions":[]}],"title":"ggplot2 で軸ラベルを縦方向に回転","updated_at":"2015-08-10T16:23:59+09:00","url":"http://qiita.com/hoxo_m/items/1a0b71b5868686311747","user":{"description":"ホクソエム (hoxo_m) は架空のデータ分析者であり、日本の若手のデータ分析者集団のペンネームである。当初このデータ分析者集団は秘密結社として活動し、ホクソエムを一個人として活動させ続けた。\r\nhttps://twitter.com/teramonagi/lists/list","facebook_id":"","followees_count":26,"followers_count":84,"github_login_name":"hoxo-m","id":"hoxo_m","items_count":147,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":2570,"profile_image_url":"https://avatars.githubusercontent.com/u/7479163?","twitter_screen_name":"hoxo_m","website_url":"http://d.hatena.ne.jp/hoxo_m/"}},{"rendered_body":"<p>ggplot2 でベースラインから上下に伸びる棒グラフを描きたい。</p>\n\n<p>そこで、次のようにする。</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">データの生成</span></div>\n<div class=\"highlight\"><pre>data <span class=\"o\">&lt;-</span> <span class=\"kt\">data.frame</span><span class=\"p\">(</span>x<span class=\"o\">=</span><span class=\"kc\">LETTERS</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"o\">:</span><span class=\"m\">10</span><span class=\"p\">],</span> y<span class=\"o\">=</span>rnorm<span class=\"p\">(</span><span class=\"m\">10</span><span class=\"p\">,</span> mean<span class=\"o\">=</span><span class=\"m\">0</span><span class=\"p\">))</span>\n<span class=\"kp\">head</span><span class=\"p\">(</span>data<span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"\">\n<div class=\"code-lang\"><span class=\"bold\">結果</span></div>\n<div class=\"highlight\"><pre><span class=\"w\">  </span><span class=\"vg\">x</span><span class=\"w\">          </span><span class=\"vg\">y</span>\n<span class=\"nl\">1</span><span class=\"w\"> </span><span class=\"vg\">A</span><span class=\"w\"> </span><span class=\"mf\">-0.4755912</span>\n<span class=\"nl\">2</span><span class=\"w\"> </span><span class=\"vg\">B</span><span class=\"w\">  </span><span class=\"mf\">0.1196277</span>\n<span class=\"nl\">3</span><span class=\"w\"> </span><span class=\"vg\">C</span><span class=\"w\">  </span><span class=\"mf\">0.1837534</span>\n<span class=\"nl\">4</span><span class=\"w\"> </span><span class=\"vg\">D</span><span class=\"w\"> </span><span class=\"mf\">-0.2376496</span>\n<span class=\"nl\">5</span><span class=\"w\"> </span><span class=\"vg\">E</span><span class=\"w\">  </span><span class=\"mf\">0.8864223</span>\n<span class=\"nl\">6</span><span class=\"w\"> </span><span class=\"vg\">F</span><span class=\"w\">  </span><span class=\"mf\">0.9673385</span>\n</pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">グラフの描画</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">library</span><span class=\"p\">(</span>ggplot2<span class=\"p\">)</span>\nggplot<span class=\"p\">(</span>data<span class=\"p\">,</span> aes<span class=\"p\">(</span>x<span class=\"o\">=</span>x<span class=\"p\">,</span> y<span class=\"o\">=</span>y<span class=\"p\">,</span> fill<span class=\"o\">=</span>y <span class=\"o\">&gt;</span> <span class=\"m\">0</span><span class=\"p\">))</span> <span class=\"o\">+</span> \n  geom_bar<span class=\"p\">(</span>stat<span class=\"o\">=</span><span class=\"s\">\"identity\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  theme<span class=\"p\">(</span>legend.position<span class=\"o\">=</span><span class=\"s\">\"none\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/2570/cb01d4c2-e3cf-241e-15a2-6cafa4e2cf84.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/2570/cb01d4c2-e3cf-241e-15a2-6cafa4e2cf84.png\" alt=\"Rplot.png\"></a></p>\n\n<p>ベースラインが 0 のものは簡単にできた。</p>\n\n<p>しかし、私が本当に欲しかったグラフは、ベースラインが 0 ではなかった。<br>\nちょっと工夫して次のようにした。</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">データの生成</span></div>\n<div class=\"highlight\"><pre>data2 <span class=\"o\">&lt;-</span> <span class=\"kt\">data.frame</span><span class=\"p\">(</span>x<span class=\"o\">=</span><span class=\"kc\">LETTERS</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"o\">:</span><span class=\"m\">10</span><span class=\"p\">],</span> y<span class=\"o\">=</span>rnorm<span class=\"p\">(</span><span class=\"m\">10</span><span class=\"p\">,</span> mean<span class=\"o\">=</span><span class=\"m\">1</span><span class=\"p\">))</span>\n<span class=\"kp\">head</span><span class=\"p\">(</span>data2<span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"\">\n<div class=\"code-lang\"><span class=\"bold\">結果</span></div>\n<div class=\"highlight\"><pre><span class=\"w\">  </span><span class=\"vg\">x</span><span class=\"w\">            </span><span class=\"vg\">y</span>\n<span class=\"nl\">1</span><span class=\"w\"> </span><span class=\"vg\">A</span><span class=\"w\">  </span><span class=\"mf\">1.502520219</span>\n<span class=\"nl\">2</span><span class=\"w\"> </span><span class=\"vg\">B</span><span class=\"w\"> </span><span class=\"mf\">-0.909011496</span>\n<span class=\"nl\">3</span><span class=\"w\"> </span><span class=\"vg\">C</span><span class=\"w\">  </span><span class=\"mf\">0.005040713</span>\n<span class=\"nl\">4</span><span class=\"w\"> </span><span class=\"vg\">D</span><span class=\"w\">  </span><span class=\"mf\">1.836899722</span>\n<span class=\"nl\">5</span><span class=\"w\"> </span><span class=\"vg\">E</span><span class=\"w\">  </span><span class=\"mf\">3.064928707</span>\n<span class=\"nl\">6</span><span class=\"w\"> </span><span class=\"vg\">F</span><span class=\"w\">  </span><span class=\"mf\">0.854557083</span>\n</pre></div>\n</div>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">グラフの描画</span></div>\n<div class=\"highlight\"><pre>base <span class=\"o\">&lt;-</span> <span class=\"m\">1</span>\nggplot<span class=\"p\">(</span>data2<span class=\"p\">,</span> aes<span class=\"p\">(</span>x<span class=\"o\">=</span>x<span class=\"p\">,</span> y<span class=\"o\">=</span>y<span class=\"o\">-</span>base<span class=\"p\">,</span> fill<span class=\"o\">=</span>y <span class=\"o\">&gt;</span> base<span class=\"p\">))</span> <span class=\"o\">+</span> \n  geom_bar<span class=\"p\">(</span>stat<span class=\"o\">=</span><span class=\"s\">\"identity\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  scale_y_continuous<span class=\"p\">(</span>labels<span class=\"o\">=</span><span class=\"kr\">function</span><span class=\"p\">(</span>y<span class=\"p\">)</span> y<span class=\"o\">+</span>base<span class=\"p\">)</span> <span class=\"o\">+</span>\n  theme<span class=\"p\">(</span>legend.position<span class=\"o\">=</span><span class=\"s\">\"none\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  ylab<span class=\"p\">(</span><span class=\"s\">\"y\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/2570/ee432f80-dd9b-1999-f32c-cab209b13fc1.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/2570/ee432f80-dd9b-1999-f32c-cab209b13fc1.png\" alt=\"Rplot01.png\"></a></p>\n\n<p>できた！</p>\n","body":"ggplot2 でベースラインから上下に伸びる棒グラフを描きたい。\n\nそこで、次のようにする。\n\n```r:データの生成\ndata <- data.frame(x=LETTERS[1:10], y=rnorm(10, mean=0))\nhead(data)\n```\n\n```:結果\n  x          y\n1 A -0.4755912\n2 B  0.1196277\n3 C  0.1837534\n4 D -0.2376496\n5 E  0.8864223\n6 F  0.9673385\n```\n\n```r:グラフの描画\nlibrary(ggplot2)\nggplot(data, aes(x=x, y=y, fill=y > 0)) + \n  geom_bar(stat=\"identity\") +\n  theme(legend.position=\"none\")\n```\n\n![Rplot.png](https://qiita-image-store.s3.amazonaws.com/0/2570/cb01d4c2-e3cf-241e-15a2-6cafa4e2cf84.png)\n\n\nベースラインが 0 のものは簡単にできた。\n\nしかし、私が本当に欲しかったグラフは、ベースラインが 0 ではなかった。\nちょっと工夫して次のようにした。\n\n```r:データの生成\ndata2 <- data.frame(x=LETTERS[1:10], y=rnorm(10, mean=1))\nhead(data2)\n```\n\n```:結果\n  x            y\n1 A  1.502520219\n2 B -0.909011496\n3 C  0.005040713\n4 D  1.836899722\n5 E  3.064928707\n6 F  0.854557083\n```\n\n```r:グラフの描画\nbase <- 1\nggplot(data2, aes(x=x, y=y-base, fill=y > base)) + \n  geom_bar(stat=\"identity\") +\n  scale_y_continuous(labels=function(y) y+base) +\n  theme(legend.position=\"none\") +\n  ylab(\"y\")\n```\n\n![Rplot01.png](https://qiita-image-store.s3.amazonaws.com/0/2570/ee432f80-dd9b-1999-f32c-cab209b13fc1.png)\n\nできた！\n","coediting":false,"created_at":"2015-06-12T18:41:34+09:00","id":"11a59004e82dc2f9a0d0","private":false,"tags":[{"name":"R","versions":[]},{"name":"ggplot2逆引き","versions":[]}],"title":"ggplot2 でベースラインから上下に伸びる棒グラフ #rstatsj","updated_at":"2015-08-10T16:22:33+09:00","url":"http://qiita.com/hoxo_m/items/11a59004e82dc2f9a0d0","user":{"description":"ホクソエム (hoxo_m) は架空のデータ分析者であり、日本の若手のデータ分析者集団のペンネームである。当初このデータ分析者集団は秘密結社として活動し、ホクソエムを一個人として活動させ続けた。\r\nhttps://twitter.com/teramonagi/lists/list","facebook_id":"","followees_count":26,"followers_count":84,"github_login_name":"hoxo-m","id":"hoxo_m","items_count":147,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":2570,"profile_image_url":"https://avatars.githubusercontent.com/u/7479163?","twitter_screen_name":"hoxo_m","website_url":"http://d.hatena.ne.jp/hoxo_m/"}},{"rendered_body":"\n<h2>\n<span id=\"q\" class=\"fragment\"></span><a href=\"#q\"><i class=\"fa fa-link\"></i></a>Q</h2>\n\n<p>ヒストグラムを作る時、x軸はfactorのlevelsで並ぶと思うのですが、`position = \"dodge\"などの場合、どうやったらbarの間のスペースを追加あるいは調整できるのでしょうか。</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">NG_example.R</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">library</span><span class=\"p\">(</span>ggplot2<span class=\"p\">)</span>\n\nTreatment <span class=\"o\">&lt;-</span> <span class=\"kp\">rep</span><span class=\"p\">(</span><span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"s\">'T'</span><span class=\"p\">,</span><span class=\"s\">'C'</span><span class=\"p\">),</span>each<span class=\"o\">=</span><span class=\"m\">2</span><span class=\"p\">)</span>\nGender <span class=\"o\">&lt;-</span> <span class=\"kp\">rep</span><span class=\"p\">(</span><span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"s\">'M'</span><span class=\"p\">,</span><span class=\"s\">'F'</span><span class=\"p\">),</span><span class=\"m\">2</span><span class=\"p\">)</span>\nResponse <span class=\"o\">&lt;-</span> <span class=\"kp\">sample</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"o\">:</span><span class=\"m\">100</span><span class=\"p\">,</span><span class=\"m\">4</span><span class=\"p\">)</span>\ndf <span class=\"o\">&lt;-</span> <span class=\"kt\">data.frame</span><span class=\"p\">(</span>Treatment<span class=\"p\">,</span> Gender<span class=\"p\">,</span> Response<span class=\"p\">)</span>\n\nhist <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>df<span class=\"p\">,</span> aes<span class=\"p\">(</span>x<span class=\"o\">=</span>Gender<span class=\"p\">,</span> y<span class=\"o\">=</span>Response<span class=\"p\">,</span> fill<span class=\"o\">=</span>Treatment<span class=\"p\">))</span>\nhist <span class=\"o\">+</span> geom_bar<span class=\"p\">(</span>position <span class=\"o\">=</span> <span class=\"s\">\"dodge\"</span><span class=\"p\">,</span> stat <span class=\"o\">=</span> <span class=\"s\">\"identity\"</span><span class=\"p\">)</span> <span class=\"o\">+</span> scale_y_continuous<span class=\"p\">(</span>limits <span class=\"o\">=</span> <span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> \n    <span class=\"m\">100</span><span class=\"p\">),</span> name <span class=\"o\">=</span> <span class=\"s\">\"\"</span><span class=\"p\">)</span> \n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/f519a3cb-1650-f8e5-f617-7622fd090c06.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/f519a3cb-1650-f8e5-f617-7622fd090c06.png\" alt=\"NG_example.R-1.png\"></a></p>\n\n<p><code>width</code>を使えばいいみたいですが、うまくあたりません。</p>\n\n<h2>\n<span id=\"a\" class=\"fragment\"></span><a href=\"#a\"><i class=\"fa fa-link\"></i></a>A</h2>\n\n<p>このような設定を試してみてください:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example.R</span></div>\n<div class=\"highlight\"><pre>hist <span class=\"o\">+</span> geom_bar<span class=\"p\">(</span>width <span class=\"o\">=</span> <span class=\"m\">0.4</span><span class=\"p\">,</span> position <span class=\"o\">=</span> position_dodge<span class=\"p\">(</span>width <span class=\"o\">=</span> <span class=\"m\">0.5</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/a58d8eef-ea89-a583-1cdf-a11a14b967ff.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/a58d8eef-ea89-a583-1cdf-a11a14b967ff.png\" alt=\"OK_example_fig-1.png\"></a></p>\n\n<p>これは2つの<code>width</code>の設定が含まれています:</p>\n\n<ul>\n<li>\n<code>geom_bar</code>内の<code>width</code>は、barの幅を決定</li>\n<li>\n<code>position_dodge</code>内の<code>width</code>は、それぞれのbarの位置を決定</li>\n</ul>\n\n<p>よって、最初に設定している<code>geom_bar(width = 0.4)</code>では、barの幅を0.4として設定しています。また、<code>position_dodge(width = 0.5)</code>では、この場合赤色と青色のbarの間隔を0.5として設定しています。</p>\n\n<p>おそらく色々と説明するよりも、この2つの設定値を色々変更して試してみたほうが、あなたの理解を助けるでしょう。ぜひ色々試してみてください。</p>\n\n<h2>\n<span id=\"補足\" class=\"fragment\"></span><a href=\"#%E8%A3%9C%E8%B6%B3\"><i class=\"fa fa-link\"></i></a>補足</h2>\n\n<p>※ 2015/8/7に指摘を受けましたので補足しました。<a href=\"/berobero11\" class=\"user-mention\" title=\"berobero11\">@berobero11</a>さん、<a href=\"/kohske\" class=\"user-mention\" title=\"kohske\">@kohske</a>さんありがとうございました。</p>\n\n<h3>\n<span id=\"設定例の一覧\" class=\"fragment\"></span><a href=\"#%E8%A8%AD%E5%AE%9A%E4%BE%8B%E3%81%AE%E4%B8%80%E8%A6%A7\"><i class=\"fa fa-link\"></i></a>設定例の一覧</h3>\n\n<p>上と同じパターンで、2つのwidthを色々設定してみたパターンを一覧できるものを作成しました:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example.R</span></div>\n<div class=\"highlight\"><pre>plot <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>df<span class=\"p\">,</span> aes<span class=\"p\">(</span>x<span class=\"o\">=</span>Gender<span class=\"p\">,</span> y<span class=\"o\">=</span>Response<span class=\"p\">,</span> fill<span class=\"o\">=</span>Treatment<span class=\"p\">))</span> <span class=\"o\">+</span> \n  scale_y_continuous<span class=\"p\">(</span>limits <span class=\"o\">=</span> <span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">100</span><span class=\"p\">),</span> name <span class=\"o\">=</span> <span class=\"s\">\"\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  theme<span class=\"p\">(</span>legend.position <span class=\"o\">=</span> <span class=\"s\">\"none\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  facet_wrap<span class=\"p\">(</span><span class=\"o\">~</span>p<span class=\"p\">)</span> <span class=\"o\">+</span>\n  <span class=\"kp\">mapply</span><span class=\"p\">(</span><span class=\"kr\">function</span><span class=\"p\">(</span>w<span class=\"p\">,</span> pw<span class=\"p\">)</span>\n    geom_bar<span class=\"p\">(</span>data <span class=\"o\">=</span> <span class=\"kp\">transform</span><span class=\"p\">(</span>df<span class=\"p\">,</span> p<span class=\"o\">=</span><span class=\"kp\">sprintf</span><span class=\"p\">(</span><span class=\"s\">\"w_%.02f_pw_%.02f\"</span><span class=\"p\">,</span> w<span class=\"p\">,</span> pw<span class=\"p\">)),</span> stat <span class=\"o\">=</span> <span class=\"s\">\"identity\"</span><span class=\"p\">,</span> width<span class=\"o\">=</span> w<span class=\"p\">,</span> position <span class=\"o\">=</span> position_dodge<span class=\"p\">(</span>width <span class=\"o\">=</span> pw<span class=\"p\">)),</span>\n    w <span class=\"o\">=</span> <span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"m\">0.6</span><span class=\"p\">,</span><span class=\"m\">0.6</span><span class=\"p\">,</span><span class=\"m\">0.6</span><span class=\"p\">,</span><span class=\"m\">0.3</span><span class=\"p\">,</span><span class=\"m\">0.3</span><span class=\"p\">,</span><span class=\"m\">0.3</span><span class=\"p\">),</span> pw <span class=\"o\">=</span> <span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"m\">0.4</span><span class=\"p\">,</span><span class=\"m\">0.7</span><span class=\"p\">,</span><span class=\"m\">1.0</span><span class=\"p\">,</span><span class=\"m\">0.4</span><span class=\"p\">,</span><span class=\"m\">0.7</span><span class=\"p\">,</span><span class=\"m\">1.0</span><span class=\"p\">))</span>\nplot\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/e781a632-ce15-9d59-b5d8-ab8893b9b172.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/e781a632-ce15-9d59-b5d8-ab8893b9b172.png\" alt=\"OK_example2a.R-1.png\"></a></p>\n\n<p>上の段が<code>geom_bar(width = 0.6)</code>で、下の段が<code>geom_bar(width = 0.4)</code>です。また左から順番に<code>position_dodge(width = c(0.4,0.7,1.0))</code>という設定にしています。</p>\n\n<p>mapplyで設定している部分については、<a href=\"http://qiita.com/kazutan/items/28dbdee1d70b184b862c\">複数のggplot2要素を関数で渡したい</a> を参考に作成しています。</p>\n\n<h3>\n<span id=\"errorbarについて\" class=\"fragment\"></span><a href=\"#errorbar%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\"><i class=\"fa fa-link\"></i></a>errorbarについて</h3>\n\n<p>errorbarについても、<code>position = position_dodge(width = 0.9)</code>のように設定できます:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example3.R</span></div>\n<div class=\"highlight\"><pre>ggplot<span class=\"p\">(</span>mtcars<span class=\"p\">,</span> aes<span class=\"p\">(</span><span class=\"kp\">factor</span><span class=\"p\">(</span>cyl<span class=\"p\">),</span> mpg<span class=\"p\">,</span> fill <span class=\"o\">=</span> <span class=\"kp\">factor</span><span class=\"p\">(</span>am<span class=\"p\">)))</span> <span class=\"o\">+</span> \n  stat_summary<span class=\"p\">(</span>fun.data <span class=\"o\">=</span> mean_se<span class=\"p\">,</span> position <span class=\"o\">=</span> position_dodge<span class=\"p\">(</span>width <span class=\"o\">=</span> <span class=\"m\">0.9</span><span class=\"p\">),</span> geom <span class=\"o\">=</span> <span class=\"s\">\"linerange\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  stat_summary<span class=\"p\">(</span>fun.y <span class=\"o\">=</span> <span class=\"kp\">mean</span><span class=\"p\">,</span> geom <span class=\"o\">=</span> <span class=\"s\">\"bar\"</span><span class=\"p\">,</span> position <span class=\"o\">=</span> position_dodge<span class=\"p\">(</span>width <span class=\"o\">=</span> <span class=\"m\">0.9</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/9fc0bf4b-1f15-be5f-b0e6-e8a73d748d9f.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/9fc0bf4b-1f15-be5f-b0e6-e8a73d748d9f.png\" alt=\"OK_example3.R-1.png\"></a></p>\n\n<p>この場合、最初の<code>stat_summary</code>でエラーバーを設定し、次の<code>stat_summary</code>でバーを設定しています。両方の<code>position = position_dodgge(width = )</code>は揃えておきましょう。</p>\n\n<p>ただし、<code>stat_summary</code>でバーの幅を変えたい場合は面倒になります。<code>stat_summary(width = 0.9)</code>といった設定は反映されないからです。幅をかえるには、<code>layer</code>から<code>geom_params = list(width = 0.6)</code>とgeomのパラメータを指定していく方法があります:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example4.R</span></div>\n<div class=\"highlight\"><pre>ggplot<span class=\"p\">(</span>mtcars<span class=\"p\">,</span> aes<span class=\"p\">(</span><span class=\"kp\">factor</span><span class=\"p\">(</span>cyl<span class=\"p\">),</span> mpg<span class=\"p\">,</span> fill <span class=\"o\">=</span> <span class=\"kp\">factor</span><span class=\"p\">(</span>am<span class=\"p\">)))</span> <span class=\"o\">+</span> \n  stat_summary<span class=\"p\">(</span>fun.data <span class=\"o\">=</span> mean_se<span class=\"p\">,</span> position <span class=\"o\">=</span> position_dodge<span class=\"p\">(</span>width <span class=\"o\">=</span> <span class=\"m\">0.8</span><span class=\"p\">),</span> geom <span class=\"o\">=</span> <span class=\"s\">\"linerange\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  layer<span class=\"p\">(</span>geom <span class=\"o\">=</span> <span class=\"s\">\"bar\"</span><span class=\"p\">,</span> geom_params <span class=\"o\">=</span> <span class=\"kt\">list</span><span class=\"p\">(</span>width <span class=\"o\">=</span> <span class=\"m\">0.6</span><span class=\"p\">),</span> stat <span class=\"o\">=</span> <span class=\"s\">\"summary\"</span><span class=\"p\">,</span> stat_params <span class=\"o\">=</span> <span class=\"kt\">list</span><span class=\"p\">(</span>fun.data <span class=\"o\">=</span> mean_se<span class=\"p\">),</span> \n        position <span class=\"o\">=</span> position_dodge<span class=\"p\">(</span>width <span class=\"o\">=</span> <span class=\"m\">0.8</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/2803db18-d9cc-7744-59dd-122db8c5cbe3.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/2803db18-d9cc-7744-59dd-122db8c5cbe3.png\" alt=\"OK_example4.R-1.png\"></a></p>\n\n<p><code>layer</code>に関する説明は省略しますが、<code>geom_*</code>や<code>stat_*</code>などは<code>layer</code>に設定値を与えたものを作成します。興味がある方は、<a href=\"http://www.amazon.co.jp/dp/486354135X\">R言語上級ハンドブック</a>のsection-54をご覧ください。</p>\n\n<h2>\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h2>\n\n<p>この記事は、以下の記事をベースに日本語化しています:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/6085238/adding-space-between-bars-in-ggplot2/6085408#6085408\">r - Adding space between bars in ggplot2 - Stack Overflow</a></li>\n</ul>\n\n<p>関連する公式ヘルプトピックス</p>\n\n<ul>\n<li><a href=\"http://docs.ggplot2.org/current/geom_bar.html\">geom_bar. ggplot2 0.9.3.1</a></li>\n<li><a href=\"docs.ggplot2.org/current/position_dodge.html\">position_dodge. ggplot2 0.9.3.1</a></li>\n<li><a href=\"http://qiita.com/kazutan/items/28dbdee1d70b184b862c\">複数のggplot2要素を関数で渡したい</a></li>\n</ul>\n","body":"## Q\nヒストグラムを作る時、x軸はfactorのlevelsで並ぶと思うのですが、`position = \"dodge\"などの場合、どうやったらbarの間のスペースを追加あるいは調整できるのでしょうか。\n\n\n```r:NG_example.R\nlibrary(ggplot2)\n\nTreatment <- rep(c('T','C'),each=2)\nGender <- rep(c('M','F'),2)\nResponse <- sample(1:100,4)\ndf <- data.frame(Treatment, Gender, Response)\n\nhist <- ggplot(df, aes(x=Gender, y=Response, fill=Treatment))\nhist + geom_bar(position = \"dodge\", stat = \"identity\") + scale_y_continuous(limits = c(0, \n    100), name = \"\") \n```\n![NG_example.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/f519a3cb-1650-f8e5-f617-7622fd090c06.png)\n\n`width`を使えばいいみたいですが、うまくあたりません。\n\n## A\nこのような設定を試してみてください:\n\n\n```r:OK_example.R\nhist + geom_bar(width = 0.4, position = position_dodge(width = 0.5))\n```\n\n![OK_example_fig-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/a58d8eef-ea89-a583-1cdf-a11a14b967ff.png)\n\nこれは2つの`width`の設定が含まれています:\n\n- `geom_bar`内の`width`は、barの幅を決定\n- `position_dodge`内の`width`は、それぞれのbarの位置を決定\n\nよって、最初に設定している`geom_bar(width = 0.4)`では、barの幅を0.4として設定しています。また、`position_dodge(width = 0.5)`では、この場合赤色と青色のbarの間隔を0.5として設定しています。\n\nおそらく色々と説明するよりも、この2つの設定値を色々変更して試してみたほうが、あなたの理解を助けるでしょう。ぜひ色々試してみてください。\n\n## 補足\n※ 2015/8/7に指摘を受けましたので補足しました。@berobero11さん、@kohskeさんありがとうございました。\n\n### 設定例の一覧\n上と同じパターンで、2つのwidthを色々設定してみたパターンを一覧できるものを作成しました:\n\n```r:OK_example.R\nplot <- ggplot(df, aes(x=Gender, y=Response, fill=Treatment)) + \n  scale_y_continuous(limits = c(0, 100), name = \"\") +\n  theme(legend.position = \"none\") +\n  facet_wrap(~p) +\n  mapply(function(w, pw)\n    geom_bar(data = transform(df, p=sprintf(\"w_%.02f_pw_%.02f\", w, pw)), stat = \"identity\", width= w, position = position_dodge(width = pw)),\n    w = c(0.6,0.6,0.6,0.3,0.3,0.3), pw = c(0.4,0.7,1.0,0.4,0.7,1.0))\nplot\n```\n\n![OK_example2a.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/e781a632-ce15-9d59-b5d8-ab8893b9b172.png)\n\n上の段が`geom_bar(width = 0.6)`で、下の段が`geom_bar(width = 0.4)`です。また左から順番に`position_dodge(width = c(0.4,0.7,1.0))`という設定にしています。\n\nmapplyで設定している部分については、[複数のggplot2要素を関数で渡したい](http://qiita.com/kazutan/items/28dbdee1d70b184b862c) を参考に作成しています。\n\n### errorbarについて\nerrorbarについても、`position = position_dodge(width = 0.9)`のように設定できます:\n\n\n```r:OK_example3.R\nggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) + \n  stat_summary(fun.data = mean_se, position = position_dodge(width = 0.9), geom = \"linerange\") +\n  stat_summary(fun.y = mean, geom = \"bar\", position = position_dodge(width = 0.9))\n```\n\n![OK_example3.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/9fc0bf4b-1f15-be5f-b0e6-e8a73d748d9f.png)\n\nこの場合、最初の`stat_summary`でエラーバーを設定し、次の`stat_summary`でバーを設定しています。両方の`position = position_dodgge(width = )`は揃えておきましょう。\n\nただし、`stat_summary`でバーの幅を変えたい場合は面倒になります。`stat_summary(width = 0.9)`といった設定は反映されないからです。幅をかえるには、`layer`から`geom_params = list(width = 0.6)`とgeomのパラメータを指定していく方法があります:\n\n\n```r:OK_example4.R\nggplot(mtcars, aes(factor(cyl), mpg, fill = factor(am))) + \n  stat_summary(fun.data = mean_se, position = position_dodge(width = 0.8), geom = \"linerange\") +\n  layer(geom = \"bar\", geom_params = list(width = 0.6), stat = \"summary\", stat_params = list(fun.data = mean_se), \n        position = position_dodge(width = 0.8))\n```\n\n![OK_example4.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/2803db18-d9cc-7744-59dd-122db8c5cbe3.png)\n\n`layer`に関する説明は省略しますが、`geom_*`や`stat_*`などは`layer`に設定値を与えたものを作成します。興味がある方は、[R言語上級ハンドブック](http://www.amazon.co.jp/dp/486354135X)のsection-54をご覧ください。\n\n## 参考\nこの記事は、以下の記事をベースに日本語化しています:\n\n- [r - Adding space between bars in ggplot2 - Stack Overflow](http://stackoverflow.com/questions/6085238/adding-space-between-bars-in-ggplot2/6085408#6085408)\n\n関連する公式ヘルプトピックス\n\n- [geom_bar. ggplot2 0.9.3.1](http://docs.ggplot2.org/current/geom_bar.html)\n- [position_dodge. ggplot2 0.9.3.1](docs.ggplot2.org/current/position_dodge.html)\n- [複数のggplot2要素を関数で渡したい](http://qiita.com/kazutan/items/28dbdee1d70b184b862c)\n","coediting":false,"created_at":"2015-08-07T10:42:37+09:00","id":"bb69515424e1563d0e22","private":false,"tags":[{"name":"R","versions":[]},{"name":"ggplot2逆引き","versions":[]}],"title":"ggplot2でbarの間にスペースを追加する","updated_at":"2015-08-07T19:14:39+09:00","url":"http://qiita.com/kazutan/items/bb69515424e1563d0e22","user":{"description":"ただの残念なぞうさんです。同名のTwitterアカウントでほそぼそと。","facebook_id":"","followees_count":5,"followers_count":8,"github_login_name":"kazutan","id":"kazutan","items_count":9,"linkedin_id":"","location":"Hiroshima, Japan","name":"Maeda Kazuhiro","organization":"Hijiyama University","permanent_id":35118,"profile_image_url":"https://avatars.githubusercontent.com/u/10094206?v=3","twitter_screen_name":"kazutan","website_url":"http://kz-md.net/"}},{"rendered_body":"\n<h1>\n<span id=\"q\" class=\"fragment\"></span><a href=\"#q\"><i class=\"fa fa-link\"></i></a>Q.</h1>\n\n<p>legendのラベル（図中のAの部分）やfacet_*のラベル（図中のBの部分）を短く変えたいのですが、どうすればよいでしょうか？</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">example.R</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">library</span><span class=\"p\">(</span>ggplot2<span class=\"p\">)</span>\n\nggplot<span class=\"p\">(</span>data<span class=\"o\">=</span>iris<span class=\"p\">,</span> aes<span class=\"p\">(</span>x<span class=\"o\">=</span>Petal.Length<span class=\"p\">,</span> fill<span class=\"o\">=</span>Species<span class=\"p\">))</span> <span class=\"o\">+</span> geom_histogram<span class=\"p\">(</span>alpha<span class=\"o\">=</span><span class=\"m\">0.4</span><span class=\"p\">,</span> position<span class=\"o\">=</span><span class=\"s\">\"identity\"</span><span class=\"p\">)</span>\nggplot<span class=\"p\">(</span>data<span class=\"o\">=</span>iris<span class=\"p\">,</span> aes<span class=\"p\">(</span>x<span class=\"o\">=</span>Petal.Length<span class=\"p\">))</span> <span class=\"o\">+</span> geom_histogram<span class=\"p\">(</span>position<span class=\"o\">=</span><span class=\"s\">\"identity\"</span><span class=\"p\">)</span> <span class=\"o\">+</span> facet_grid<span class=\"p\">(</span>Species <span class=\"o\">~</span> <span class=\"m\">.</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/12869/541187a8-cb4b-cab4-f3dc-b6518415fa78.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/12869/541187a8-cb4b-cab4-f3dc-b6518415fa78.png\" alt=\"example.png\"></a></p>\n\n<h1>\n<span id=\"a\" class=\"fragment\"></span><a href=\"#a\"><i class=\"fa fa-link\"></i></a>A.</h1>\n\n<p><code>levels</code>関数を使ってfactorのlevelの名前（level attribute）を変えます。</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example.R</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">library</span><span class=\"p\">(</span>ggplot2<span class=\"p\">)</span>\n\n<span class=\"kp\">levels</span><span class=\"p\">(</span>iris<span class=\"o\">$</span>Species<span class=\"p\">)</span>\n<span class=\"c1\"># [1] \"setosa\"     \"versicolor\" \"virginica\"</span>\n<span class=\"kp\">levels</span><span class=\"p\">(</span>iris<span class=\"o\">$</span>Species<span class=\"p\">)</span> <span class=\"o\">&lt;-</span> <span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"s\">\"S\"</span><span class=\"p\">,</span> <span class=\"s\">\"Ve\"</span><span class=\"p\">,</span> <span class=\"s\">\"Vi\"</span><span class=\"p\">)</span>\n\nggplot<span class=\"p\">(</span>data<span class=\"o\">=</span>iris<span class=\"p\">,</span> aes<span class=\"p\">(</span>x<span class=\"o\">=</span>Petal.Length<span class=\"p\">,</span> fill<span class=\"o\">=</span>Species<span class=\"p\">))</span> <span class=\"o\">+</span> geom_histogram<span class=\"p\">(</span>alpha<span class=\"o\">=</span><span class=\"m\">0.4</span><span class=\"p\">,</span> position<span class=\"o\">=</span><span class=\"s\">\"identity\"</span><span class=\"p\">)</span>\nggplot<span class=\"p\">(</span>data<span class=\"o\">=</span>iris<span class=\"p\">,</span> aes<span class=\"p\">(</span>x<span class=\"o\">=</span>Petal.Length<span class=\"p\">))</span> <span class=\"o\">+</span> geom_histogram<span class=\"p\">(</span>position<span class=\"o\">=</span><span class=\"s\">\"identity\"</span><span class=\"p\">)</span> <span class=\"o\">+</span> facet_grid<span class=\"p\">(</span>Species <span class=\"o\">~</span> <span class=\"m\">.</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p><code>levels(x)</code>では今のlevel attributeが取得されます。このlevelの順序は保持したまま、表示名を変えるには<code>levels(x) &lt;- value</code>を使います。詳しくは<code>levels</code>関数のヘルプをみてください。結果は以下になります。<br>\n<a href=\"https://qiita-image-store.s3.amazonaws.com/0/12869/1067af2d-ab0d-3286-36a3-0ea40d49d9bc.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/12869/1067af2d-ab0d-3286-36a3-0ea40d49d9bc.png\" alt=\"OK.png\"></a><br>\nちなみに表示名ではなくて表示順序を変えたい時は「<a href=\"http://qiita.com/kazutan/items/7840f743d642122d1219\">x軸を並べ替えたい</a>」を参考にしてください。</p>\n\n<h1>\n<span id=\"参考資料\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83%E8%B3%87%E6%96%99\"><i class=\"fa fa-link\"></i></a>参考資料</h1>\n\n<p><a href=\"http://stackoverflow.com/questions/3472980/ggplot-how-to-change-facet-labels\">http://stackoverflow.com/questions/3472980/ggplot-how-to-change-facet-labels</a></p>\n","body":"# Q.\nlegendのラベル（図中のAの部分）やfacet_*のラベル（図中のBの部分）を短く変えたいのですが、どうすればよいでしょうか？\n\n```example.R\nlibrary(ggplot2)\n\nggplot(data=iris, aes(x=Petal.Length, fill=Species)) + geom_histogram(alpha=0.4, position=\"identity\")\nggplot(data=iris, aes(x=Petal.Length)) + geom_histogram(position=\"identity\") + facet_grid(Species ~ .)\n```\n\n![example.png](https://qiita-image-store.s3.amazonaws.com/0/12869/541187a8-cb4b-cab4-f3dc-b6518415fa78.png)\n\n# A.\n`levels`関数を使ってfactorのlevelの名前（level attribute）を変えます。\n\n```OK_example.R\nlibrary(ggplot2)\n\nlevels(iris$Species)\n# [1] \"setosa\"     \"versicolor\" \"virginica\"\nlevels(iris$Species) <- c(\"S\", \"Ve\", \"Vi\")\n\nggplot(data=iris, aes(x=Petal.Length, fill=Species)) + geom_histogram(alpha=0.4, position=\"identity\")\nggplot(data=iris, aes(x=Petal.Length)) + geom_histogram(position=\"identity\") + facet_grid(Species ~ .)\n```\n\n`levels(x)`では今のlevel attributeが取得されます。このlevelの順序は保持したまま、表示名を変えるには`levels(x) <- value`を使います。詳しくは`levels`関数のヘルプをみてください。結果は以下になります。\n![OK.png](https://qiita-image-store.s3.amazonaws.com/0/12869/1067af2d-ab0d-3286-36a3-0ea40d49d9bc.png)\nちなみに表示名ではなくて表示順序を変えたい時は「[x軸を並べ替えたい](http://qiita.com/kazutan/items/7840f743d642122d1219)」を参考にしてください。\n\n# 参考資料\nhttp://stackoverflow.com/questions/3472980/ggplot-how-to-change-facet-labels\n","coediting":false,"created_at":"2015-08-05T12:40:16+09:00","id":"8ad3e9c688b8515bb906","private":false,"tags":[{"name":"R","versions":[]},{"name":"ggplot2逆引き","versions":[]}],"title":"legendやfacet_*のラベルの表示を変えたい","updated_at":"2015-08-05T12:40:16+09:00","url":"http://qiita.com/berobero11/items/8ad3e9c688b8515bb906","user":{"description":{},"facebook_id":{},"followees_count":38,"followers_count":23,"github_login_name":{},"id":"berobero11","items_count":6,"linkedin_id":{},"location":{},"name":"","organization":{},"permanent_id":12869,"profile_image_url":"https://pbs.twimg.com/profile_images/620606111159181313/If4Pg1hB_normal.png","twitter_screen_name":"berobero11","website_url":{}}},{"rendered_body":"<blockquote>\n<p>本記事は <a href=\"http://qiita.com/tags/ggplot2%E9%80%86%E5%BC%95%E3%81%8D/items\">ggplot2逆引き</a> プロジェクトの一環として、Stack Oveflow の下記記事を翻訳したものです。<br>\n<a href=\"http://stackoverflow.com/questions/5322836/choosing-between-qplot-and-ggplot-in-ggplot2\">Choosing between qplot() and ggplot() in ggplot2</a></p>\n</blockquote>\n\n<h2>\n<span id=\"質問\" class=\"fragment\"></span><a href=\"#%E8%B3%AA%E5%95%8F\"><i class=\"fa fa-link\"></i></a>質問</h2>\n\n<p>私は R でのプロットに、素晴らしい <code>ggplot2</code> パッケージを使い始めた者です。<br>\n<code>ggplot2</code> でプロットを作成しようとするとき、まず最初に自分に問いかける質問があります。<br>\n「うーむ、<code>qplot</code> と <code>ggplot</code> のどちらを使おうか」</p>\n\n<p>私の理解では、<code>qplot</code> 関数はシンプルな文法を提供するものであり、一方 <code>ggplot</code> 関数はより柔軟に全ての機能を利用可能にするものだと思っています。<br>\nここで質問したいのは、みなさんはどちらかの関数を重点的に使用しているのでしょうか？<br>\nもしくは、「こういう場合にはこっちを使う」という明確な基準を持っているのでしょうか？</p>\n\n<p>普段は <code>qplot</code> を使用して、複雑なプロットを描くときだけ <code>ggplot</code> を使用しているのでしょうか？<br>\nそれとも常に <code>ggplot</code> を使用しているのでしょうか？</p>\n\n<p>ご回答いただけると幸いです！</p>\n\n<h2>\n<span id=\"回答\" class=\"fragment\"></span><a href=\"#%E5%9B%9E%E7%AD%94\"><i class=\"fa fa-link\"></i></a>回答</h2>\n\n<p>私の場合、もし <code>qplot</code> と <code>ggplot</code> の両方が使用可能である場合は、データが <code>data.frame</code> に格納されているのか、それとも別々の変数になっているのかというのが使い分けの基準になります。</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">R</span></div>\n<div class=\"highlight\"><pre>x <span class=\"o\">&lt;-</span> <span class=\"m\">1</span><span class=\"o\">:</span><span class=\"m\">10</span>\ny <span class=\"o\">&lt;-</span> rnorm<span class=\"p\">(</span><span class=\"m\">10</span><span class=\"p\">)</span>\n\nqplot<span class=\"p\">(</span>x<span class=\"p\">,</span> y<span class=\"p\">,</span> geom<span class=\"o\">=</span><span class=\"s\">\"line\"</span><span class=\"p\">)</span> <span class=\"c1\"># こっちを使う</span>\nggplot<span class=\"p\">(</span><span class=\"kt\">data.frame</span><span class=\"p\">(</span>x<span class=\"p\">,</span> y<span class=\"p\">),</span> aes<span class=\"p\">(</span>x<span class=\"p\">,</span> y<span class=\"p\">))</span> <span class=\"o\">+</span> geom_line<span class=\"p\">()</span> <span class=\"c1\"># くどい</span>\n\nd <span class=\"o\">&lt;-</span> <span class=\"kt\">data.frame</span><span class=\"p\">(</span>x<span class=\"p\">,</span> y<span class=\"p\">)</span>\n\nqplot<span class=\"p\">(</span>x<span class=\"p\">,</span> y<span class=\"p\">,</span> data<span class=\"o\">=</span>d<span class=\"p\">,</span> geom<span class=\"o\">=</span><span class=\"s\">\"line\"</span><span class=\"p\">)</span> \nggplot<span class=\"p\">(</span>d<span class=\"p\">,</span> aes<span class=\"p\">(</span>x<span class=\"p\">,</span> y<span class=\"p\">))</span> <span class=\"o\">+</span> geom_line<span class=\"p\">()</span> <span class=\"c1\"># こっちを使う</span>\n</pre></div>\n</div>\n\n<p>もちろん、もっと複雑なプロットを描くには、<code>ggplot()</code> が必要になります。<br>\nそして私は普段からデータを <code>data.frame</code> に格納するようにしているので、経験上、<code>qplot</code> を使用するのは稀です。</p>\n\n<p>私は常に <code>ggplot()</code> を使うのが良いように思います。<br>\n<code>qplot</code> を使えばタイプ量は減るかもしれませんが、多くの機能が使えないわけですから。</p>\n","body":"> 本記事は [ggplot2逆引き](http://qiita.com/tags/ggplot2%E9%80%86%E5%BC%95%E3%81%8D/items) プロジェクトの一環として、Stack Oveflow の下記記事を翻訳したものです。\n> [Choosing between qplot() and ggplot() in ggplot2](http://stackoverflow.com/questions/5322836/choosing-between-qplot-and-ggplot-in-ggplot2)\n\n## 質問\n\n私は R でのプロットに、素晴らしい `ggplot2` パッケージを使い始めた者です。\n`ggplot2` でプロットを作成しようとするとき、まず最初に自分に問いかける質問があります。\n「うーむ、`qplot` と `ggplot` のどちらを使おうか」\n\n私の理解では、`qplot` 関数はシンプルな文法を提供するものであり、一方 `ggplot` 関数はより柔軟に全ての機能を利用可能にするものだと思っています。\nここで質問したいのは、みなさんはどちらかの関数を重点的に使用しているのでしょうか？\nもしくは、「こういう場合にはこっちを使う」という明確な基準を持っているのでしょうか？\n\n普段は `qplot` を使用して、複雑なプロットを描くときだけ `ggplot` を使用しているのでしょうか？\nそれとも常に `ggplot` を使用しているのでしょうか？\n\nご回答いただけると幸いです！\n\n## 回答\n\n私の場合、もし `qplot` と `ggplot` の両方が使用可能である場合は、データが `data.frame` に格納されているのか、それとも別々の変数になっているのかというのが使い分けの基準になります。\n\n```r:R\nx <- 1:10\ny <- rnorm(10)\n\nqplot(x, y, geom=\"line\") # こっちを使う\nggplot(data.frame(x, y), aes(x, y)) + geom_line() # くどい\n\nd <- data.frame(x, y)\n\nqplot(x, y, data=d, geom=\"line\") \nggplot(d, aes(x, y)) + geom_line() # こっちを使う\n```\n\nもちろん、もっと複雑なプロットを描くには、`ggplot()` が必要になります。\nそして私は普段からデータを `data.frame` に格納するようにしているので、経験上、`qplot` を使用するのは稀です。\n\n私は常に `ggplot()` を使うのが良いように思います。\n`qplot` を使えばタイプ量は減るかもしれませんが、多くの機能が使えないわけですから。\n","coediting":false,"created_at":"2015-08-03T19:01:17+09:00","id":"fb4b52cc11be252b7a43","private":false,"tags":[{"name":"R","versions":[]},{"name":"ggplot2逆引き","versions":[]}],"title":"ggplot2 で qplot() と ggplot() のどちらを選びますか？ #rstatsj","updated_at":"2015-08-03T19:01:17+09:00","url":"http://qiita.com/hoxo_m/items/fb4b52cc11be252b7a43","user":{"description":"ホクソエム (hoxo_m) は架空のデータ分析者であり、日本の若手のデータ分析者集団のペンネームである。当初このデータ分析者集団は秘密結社として活動し、ホクソエムを一個人として活動させ続けた。\r\nhttps://twitter.com/teramonagi/lists/list","facebook_id":"","followees_count":26,"followers_count":84,"github_login_name":"hoxo-m","id":"hoxo_m","items_count":147,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":2570,"profile_image_url":"https://avatars.githubusercontent.com/u/7479163?","twitter_screen_name":"hoxo_m","website_url":"http://d.hatena.ne.jp/hoxo_m/"}},{"rendered_body":"\n<h2>\n<span id=\"q\" class=\"fragment\"></span><a href=\"#q\"><i class=\"fa fa-link\"></i></a>Q</h2>\n\n<p><code>ggplot2</code>で帯グラフを作成したいのですが、どうやったら描けるでしょうか?</p>\n\n<h2>\n<span id=\"a\" class=\"fragment\"></span><a href=\"#a\"><i class=\"fa fa-link\"></i></a>A</h2>\n\n<p>以下の要素を組み合わせると帯グラフが描けます:</p>\n\n<ol>\n<li>形状は棒グラフ(<code>geom = \"bar</code>)</li>\n<li>y軸をフルに設定(<code>position = \"full</code>)</li>\n<li>y軸をパーセンタイル標記に設定(<code>scale_y_continuous(labels = percent)</code>)</li>\n<li>x軸とy軸を入れ替えて横棒グラフに設定(<code>coord_flip()</code>)</li>\n<li>項目順の調整 ※必要であれば</li>\n</ol>\n\n<p>以下のコードから要素を追加していきます:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">example1.R</span></div>\n<div class=\"highlight\"><pre>p <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>mtcars<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> <span class=\"kp\">as.factor</span><span class=\"p\">(</span>gear<span class=\"p\">),</span> fill <span class=\"o\">=</span> <span class=\"kp\">as.factor</span><span class=\"p\">(</span>vs<span class=\"p\">)))</span> <span class=\"o\">+</span>\n  geom_bar<span class=\"p\">()</span>\np\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/9dacb498-8971-5672-4a2b-757e8b25ba7c.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/9dacb498-8971-5672-4a2b-757e8b25ba7c.png\" alt=\"example1.R-1.png\"></a></p>\n\n<h3>\n<span id=\"y軸をフルに設定\" class=\"fragment\"></span><a href=\"#y%E8%BB%B8%E3%82%92%E3%83%95%E3%83%AB%E3%81%AB%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>y軸をフルに設定</h3>\n\n<p>y軸を、一端からもう一端へと引き伸ばすには、`position = \"fill\"を設定します:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">example2.R</span></div>\n<div class=\"highlight\"><pre>p <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>mtcars<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> <span class=\"kp\">as.factor</span><span class=\"p\">(</span>gear<span class=\"p\">),</span> fill <span class=\"o\">=</span> <span class=\"kp\">as.factor</span><span class=\"p\">(</span>vs<span class=\"p\">)))</span> <span class=\"o\">+</span>\n  geom_bar<span class=\"p\">(</span>position <span class=\"o\">=</span> <span class=\"s\">\"fill\"</span><span class=\"p\">)</span>\np\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/f3e701d9-d7ef-118c-b37b-33f46586dff5.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/f3e701d9-d7ef-118c-b37b-33f46586dff5.png\" alt=\"example2.R-1.png\"></a></p>\n\n<p>このとき、y軸のメモリが0-1.00と比率へ自動的に変化していることに留意してください。</p>\n\n<h3>\n<span id=\"y軸をパーセンタイル標記に設定\" class=\"fragment\"></span><a href=\"#y%E8%BB%B8%E3%82%92%E3%83%91%E3%83%BC%E3%82%BB%E3%83%B3%E3%82%BF%E3%82%A4%E3%83%AB%E6%A8%99%E8%A8%98%E3%81%AB%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>y軸をパーセンタイル標記に設定</h3>\n\n<p><code>{scale}</code>パッケージを読み込んで、<code>scale_y_continuous(labels=percent)</code>の設定を追加します:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">example3.R</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">require</span><span class=\"p\">(</span>scales<span class=\"p\">)</span>\np <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>mtcars<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> <span class=\"kp\">as.factor</span><span class=\"p\">(</span>gear<span class=\"p\">),</span> fill <span class=\"o\">=</span> <span class=\"kp\">as.factor</span><span class=\"p\">(</span>vs<span class=\"p\">)))</span> <span class=\"o\">+</span>\n  geom_bar<span class=\"p\">(</span>position <span class=\"o\">=</span> <span class=\"s\">\"fill\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  scale_y_continuous<span class=\"p\">(</span>labels <span class=\"o\">=</span> percent<span class=\"p\">)</span>\np\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/485dbbd0-db3e-9710-ac29-27dd79b4c6ed.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/485dbbd0-db3e-9710-ac29-27dd79b4c6ed.png\" alt=\"example3.R-1.png\"></a></p>\n\n<p>他にも方法はありますがこれが一番スムーズできれいにできます。{ggplot2}パッケージをインストールしているなら、{scales}はおそらくすでにインストールされています。</p>\n\n<h3>\n<span id=\"x軸とy軸を入れ替えて横棒グラフに設定\" class=\"fragment\"></span><a href=\"#x%E8%BB%B8%E3%81%A8y%E8%BB%B8%E3%82%92%E5%85%A5%E3%82%8C%E6%9B%BF%E3%81%88%E3%81%A6%E6%A8%AA%E6%A3%92%E3%82%B0%E3%83%A9%E3%83%95%E3%81%AB%E8%A8%AD%E5%AE%9A\"><i class=\"fa fa-link\"></i></a>x軸とy軸を入れ替えて横棒グラフに設定</h3>\n\n<p>この方法については、<a href=\"http://qiita.com/kazutan/items/5c4ee243c48a64b44b2d\">ggplot2逆引き - ggplot2で縦軸と横軸をひっくり返したい - Qiita</a>を参照してください。</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">example4.R</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">require</span><span class=\"p\">(</span>scales<span class=\"p\">)</span>\np <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>mtcars<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> <span class=\"kp\">as.factor</span><span class=\"p\">(</span>gear<span class=\"p\">),</span> fill <span class=\"o\">=</span> <span class=\"kp\">as.factor</span><span class=\"p\">(</span>vs<span class=\"p\">)))</span> <span class=\"o\">+</span>\n  geom_bar<span class=\"p\">(</span>position <span class=\"o\">=</span> <span class=\"s\">\"fill\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  scale_y_continuous<span class=\"p\">(</span>labels <span class=\"o\">=</span> percent<span class=\"p\">)</span> <span class=\"o\">+</span>\n  coord_flip<span class=\"p\">()</span>\np\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/098d6fa4-f000-e355-bcb7-108bbb201a02.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/098d6fa4-f000-e355-bcb7-108bbb201a02.png\" alt=\"example4.R-1.png\"></a></p>\n\n<h3>\n<span id=\"項目順の調整\" class=\"fragment\"></span><a href=\"#%E9%A0%85%E7%9B%AE%E9%A0%86%E3%81%AE%E8%AA%BF%E6%95%B4\"><i class=\"fa fa-link\"></i></a>項目順の調整</h3>\n\n<p>この方法については、<a href=\"http://qiita.com/kazutan/items/7840f743d642122d1219\">ggplot2逆引き - x軸を並べ替えたい - Qiita</a>を参照してください。</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">example5.R</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">require</span><span class=\"p\">(</span>scales<span class=\"p\">)</span>\nmtcars.v2 <span class=\"o\">&lt;-</span> <span class=\"kp\">transform</span><span class=\"p\">(</span>mtcars<span class=\"p\">,</span> gear2 <span class=\"o\">=</span> gear <span class=\"o\">*</span> <span class=\"m\">-1</span><span class=\"p\">)</span>\np <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>mtcars.v2<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> reorder<span class=\"p\">(</span>gear<span class=\"p\">,</span> gear2<span class=\"p\">),</span> fill <span class=\"o\">=</span> <span class=\"kp\">as.factor</span><span class=\"p\">(</span>vs<span class=\"p\">)))</span> <span class=\"o\">+</span>\n  geom_bar<span class=\"p\">(</span>position <span class=\"o\">=</span> <span class=\"s\">\"fill\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  scale_y_continuous<span class=\"p\">(</span>labels <span class=\"o\">=</span> percent<span class=\"p\">)</span> <span class=\"o\">+</span>\n  coord_flip<span class=\"p\">()</span>\np\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/f6a1e6cf-d461-39b4-8580-a2d10f7f73dd.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/f6a1e6cf-d461-39b4-8580-a2d10f7f73dd.png\" alt=\"example5.R-1.png\"></a></p>\n\n<p>これで帯グラフの完成です。結構手間がかかります。</p>\n\n<h2>\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h2>\n\n<ul>\n<li><a href=\"http://docs.ggplot2.org/current/position_fill.html\">position_fill. ggplot2 0.9.3.1</a></li>\n<li><a href=\"http://docs.ggplot2.org/current/scale_continuous.html\">scale_x_continuous. ggplot2 0.9.3.1</a></li>\n<li><a href=\"http://qiita.com/kazutan/items/5c4ee243c48a64b44b2d\">ggplot2逆引き - ggplot2で縦軸と横軸をひっくり返したい - Qiita</a></li>\n<li><a href=\"http://qiita.com/kazutan/items/7840f743d642122d1219\">ggplot2逆引き - x軸を並べ替えたい - Qiita</a></li>\n</ul>\n","body":"## Q\n`ggplot2`で帯グラフを作成したいのですが、どうやったら描けるでしょうか?\n\n## A\n以下の要素を組み合わせると帯グラフが描けます:\n\n1. 形状は棒グラフ(`geom = \"bar`)\n2. y軸をフルに設定(`position = \"full`)\n3. y軸をパーセンタイル標記に設定(`scale_y_continuous(labels = percent)`)\n4. x軸とy軸を入れ替えて横棒グラフに設定(`coord_flip()`)\n5. 項目順の調整 ※必要であれば\n\n以下のコードから要素を追加していきます:\n\n```r:example1.R\np <- ggplot(mtcars, aes(x = as.factor(gear), fill = as.factor(vs))) +\n  geom_bar()\np\n```\n\n![example1.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/9dacb498-8971-5672-4a2b-757e8b25ba7c.png)\n\n### y軸をフルに設定\ny軸を、一端からもう一端へと引き伸ばすには、`position = \"fill\"を設定します:\n\n```r:example2.R\np <- ggplot(mtcars, aes(x = as.factor(gear), fill = as.factor(vs))) +\n  geom_bar(position = \"fill\")\np\n```\n\n![example2.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/f3e701d9-d7ef-118c-b37b-33f46586dff5.png)\n\nこのとき、y軸のメモリが0-1.00と比率へ自動的に変化していることに留意してください。\n\n### y軸をパーセンタイル標記に設定\n`{scale}`パッケージを読み込んで、`scale_y_continuous(labels=percent)`の設定を追加します:\n\n```r:example3.R\nrequire(scales)\np <- ggplot(mtcars, aes(x = as.factor(gear), fill = as.factor(vs))) +\n  geom_bar(position = \"fill\") +\n  scale_y_continuous(labels = percent)\np\n```\n\n![example3.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/485dbbd0-db3e-9710-ac29-27dd79b4c6ed.png)\n\n他にも方法はありますがこれが一番スムーズできれいにできます。{ggplot2}パッケージをインストールしているなら、{scales}はおそらくすでにインストールされています。\n\n### x軸とy軸を入れ替えて横棒グラフに設定\nこの方法については、[ggplot2逆引き - ggplot2で縦軸と横軸をひっくり返したい - Qiita](http://qiita.com/kazutan/items/5c4ee243c48a64b44b2d)を参照してください。\n\n```r:example4.R\nrequire(scales)\np <- ggplot(mtcars, aes(x = as.factor(gear), fill = as.factor(vs))) +\n  geom_bar(position = \"fill\") +\n  scale_y_continuous(labels = percent) +\n  coord_flip()\np\n```\n\n![example4.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/098d6fa4-f000-e355-bcb7-108bbb201a02.png)\n\n### 項目順の調整\nこの方法については、[ggplot2逆引き - x軸を並べ替えたい - Qiita](http://qiita.com/kazutan/items/7840f743d642122d1219)を参照してください。\n\n```r:example5.R\nrequire(scales)\nmtcars.v2 <- transform(mtcars, gear2 = gear * -1)\np <- ggplot(mtcars.v2, aes(x = reorder(gear, gear2), fill = as.factor(vs))) +\n  geom_bar(position = \"fill\") +\n  scale_y_continuous(labels = percent) +\n  coord_flip()\np\n```\n\n![example5.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/f6a1e6cf-d461-39b4-8580-a2d10f7f73dd.png)\n\nこれで帯グラフの完成です。結構手間がかかります。\n\n## 参考\n- [position_fill. ggplot2 0.9.3.1](http://docs.ggplot2.org/current/position_fill.html)\n- [scale_x_continuous. ggplot2 0.9.3.1](http://docs.ggplot2.org/current/scale_continuous.html)\n- [ggplot2逆引き - ggplot2で縦軸と横軸をひっくり返したい - Qiita](http://qiita.com/kazutan/items/5c4ee243c48a64b44b2d)\n- [ggplot2逆引き - x軸を並べ替えたい - Qiita](http://qiita.com/kazutan/items/7840f743d642122d1219)\n","coediting":false,"created_at":"2015-08-02T19:29:34+09:00","id":"ae16fa0f796c1ee708fb","private":false,"tags":[{"name":"R","versions":[]},{"name":"ggplot2逆引き","versions":[]}],"title":"ggplot2で帯グラフを作る","updated_at":"2015-08-03T19:09:37+09:00","url":"http://qiita.com/kazutan/items/ae16fa0f796c1ee708fb","user":{"description":"ただの残念なぞうさんです。同名のTwitterアカウントでほそぼそと。","facebook_id":"","followees_count":5,"followers_count":8,"github_login_name":"kazutan","id":"kazutan","items_count":9,"linkedin_id":"","location":"Hiroshima, Japan","name":"Maeda Kazuhiro","organization":"Hijiyama University","permanent_id":35118,"profile_image_url":"https://avatars.githubusercontent.com/u/10094206?v=3","twitter_screen_name":"kazutan","website_url":"http://kz-md.net/"}},{"rendered_body":"\n<h2>\n<span id=\"q\" class=\"fragment\"></span><a href=\"#q\"><i class=\"fa fa-link\"></i></a>Q</h2>\n\n<p>例えば以下のようなグラフで、x軸とy軸をひっくり返したい(横棒グラフ)にしたいのですが、どうしたらいいのでしょうか?</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">NG_example.R</span></div>\n<div class=\"highlight\"><pre>ggplot<span class=\"p\">(</span>mtcars<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> <span class=\"kp\">as.factor</span><span class=\"p\">(</span>gear<span class=\"p\">)))</span> <span class=\"o\">+</span>\n  geom_bar<span class=\"p\">()</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/a784dfab-db16-8990-a791-dfa35e2aefa9.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/a784dfab-db16-8990-a791-dfa35e2aefa9.png\" alt=\"NG_example.R-1.png\"></a></p>\n\n<h2>\n<span id=\"a\" class=\"fragment\"></span><a href=\"#a\"><i class=\"fa fa-link\"></i></a>A</h2>\n\n<p><code>+ coord_flip()</code>を追加すると、x軸とy軸が入れ替わります:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example.R</span></div>\n<div class=\"highlight\"><pre>ggplot<span class=\"p\">(</span>mtcars<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> <span class=\"kp\">as.factor</span><span class=\"p\">(</span>gear<span class=\"p\">)))</span> <span class=\"o\">+</span>\n  geom_bar<span class=\"p\">()</span> <span class=\"o\">+</span>\n  coord_flip<span class=\"p\">()</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/6744ea53-aed5-4984-9121-e021d85b0dea.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/6744ea53-aed5-4984-9121-e021d85b0dea.png\" alt=\"OK_example.R-1.png\"></a></p>\n\n<p>この設定は、別に棒グラフだけではなく、全てに適用可能です。</p>\n\n<h2>\n<span id=\"応用\" class=\"fragment\"></span><a href=\"#%E5%BF%9C%E7%94%A8\"><i class=\"fa fa-link\"></i></a>応用</h2>\n\n<p>この<code>coord_flip()</code>を設定した場合、更に軸に設定を加えるときは<strong>元の座標軸</strong>に設定してください:</p>\n\n<p>例) <code>count</code>軸の範囲を変更する場合:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example2.R</span></div>\n<div class=\"highlight\"><pre>ggplot<span class=\"p\">(</span>mtcars<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> <span class=\"kp\">as.factor</span><span class=\"p\">(</span>gear<span class=\"p\">)))</span> <span class=\"o\">+</span>\n  geom_bar<span class=\"p\">()</span> <span class=\"o\">+</span>\n  coord_flip<span class=\"p\">()</span> <span class=\"o\">+</span>\n  ylim<span class=\"p\">(</span><span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"m\">20</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/b6db8519-24a2-e69f-091b-793fb76e1aa7.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/b6db8519-24a2-e69f-091b-793fb76e1aa7.png\" alt=\"OK_eample2.R-1.png\"></a></p>\n\n<p>また、棒グラフを横にすると、下から順番にならびます。軸の内容の並べ替えについては、以下の記事を参照してください:<br>\n- <a href=\"http://qiita.com/kazutan/items/7840f743d642122d1219\">ggplot2逆引き - x軸を並べ替えたい - Qiita</a></p>\n\n<p>今回x軸はfactor型なので、順番を入れ替えるには以下のように<code>reorder()</code>を当てて変更しておく必要があります:</p>\n\n<p>例) <code>as.factor(gear)</code>軸の順序を反転する場合:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example3.R</span></div>\n<div class=\"highlight\"><pre>ggplot<span class=\"p\">(</span>mtcars<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> reorder<span class=\"p\">(</span><span class=\"kp\">as.factor</span><span class=\"p\">(</span>gear<span class=\"p\">),</span> gear <span class=\"o\">*</span> <span class=\"m\">-1</span><span class=\"p\">)))</span> <span class=\"o\">+</span>\n  geom_bar<span class=\"p\">()</span> <span class=\"o\">+</span>\n  coord_flip<span class=\"p\">()</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/1a94dfd1-5b10-6226-f8ab-92bfe06c735a.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/1a94dfd1-5b10-6226-f8ab-92bfe06c735a.png\" alt=\"OK_example3.R-1.png\"></a></p>\n\n<p>なお、x軸が連続変量であったならば、単に<code>+ scale_x_reverse()</code>を追加すればOKです。</p>\n\n<p>例) <code>gear</code>軸の順序を反転する場合:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example4.R</span></div>\n<div class=\"highlight\"><pre>ggplot<span class=\"p\">(</span>mtcars<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> gear<span class=\"p\">))</span> <span class=\"o\">+</span>\n  geom_bar<span class=\"p\">()</span> <span class=\"o\">+</span>\n  coord_flip<span class=\"p\">()</span> <span class=\"o\">+</span>\n  scale_x_reverse<span class=\"p\">()</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/19182e26-0717-c8ee-7583-fcfa058a1035.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/19182e26-0717-c8ee-7583-fcfa058a1035.png\" alt=\"OK_example4.R-1.png\"></a></p>\n\n<h2>\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h2>\n\n<ul>\n<li><a href=\"http://docs.ggplot2.org/current/coord_flip.html\">coord_flip. ggplot2 0.9.3.1</a></li>\n<li><a href=\"http://qiita.com/kazutan/items/7840f743d642122d1219\">ggplot2逆引き - x軸を並べ替えたい - Qiita</a></li>\n</ul>\n","body":"## Q\n例えば以下のようなグラフで、x軸とy軸をひっくり返したい(横棒グラフ)にしたいのですが、どうしたらいいのでしょうか?\n\n```r:NG_example.R\nggplot(mtcars, aes(x = as.factor(gear))) +\n  geom_bar()\n```\n\n![NG_example.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/a784dfab-db16-8990-a791-dfa35e2aefa9.png)\n\n\n## A\n`+ coord_flip()`を追加すると、x軸とy軸が入れ替わります:\n\n```r:OK_example.R\nggplot(mtcars, aes(x = as.factor(gear))) +\n  geom_bar() +\n  coord_flip()\n```\n\n![OK_example.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/6744ea53-aed5-4984-9121-e021d85b0dea.png)\n\nこの設定は、別に棒グラフだけではなく、全てに適用可能です。\n\n## 応用\nこの`coord_flip()`を設定した場合、更に軸に設定を加えるときは**元の座標軸**に設定してください:\n\n例) `count`軸の範囲を変更する場合:\n\n```r:OK_example2.R\nggplot(mtcars, aes(x = as.factor(gear))) +\n  geom_bar() +\n  coord_flip() +\n  ylim(c(0,20))\n```\n\n![OK_eample2.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/b6db8519-24a2-e69f-091b-793fb76e1aa7.png)\n\nまた、棒グラフを横にすると、下から順番にならびます。軸の内容の並べ替えについては、以下の記事を参照してください:\n- [ggplot2逆引き - x軸を並べ替えたい - Qiita](http://qiita.com/kazutan/items/7840f743d642122d1219)\n\n今回x軸はfactor型なので、順番を入れ替えるには以下のように`reorder()`を当てて変更しておく必要があります:\n\n例) `as.factor(gear)`軸の順序を反転する場合:\n\n```r:OK_example3.R\nggplot(mtcars, aes(x = reorder(as.factor(gear), gear * -1))) +\n  geom_bar() +\n  coord_flip()\n```\n\n![OK_example3.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/1a94dfd1-5b10-6226-f8ab-92bfe06c735a.png)\n\nなお、x軸が連続変量であったならば、単に`+ scale_x_reverse()`を追加すればOKです。\n\n例) `gear`軸の順序を反転する場合:\n\n```r:OK_example4.R\nggplot(mtcars, aes(x = gear)) +\n  geom_bar() +\n  coord_flip() +\n  scale_x_reverse()\n```\n\n![OK_example4.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/19182e26-0717-c8ee-7583-fcfa058a1035.png)\n\n## 参考\n- [coord_flip. ggplot2 0.9.3.1](http://docs.ggplot2.org/current/coord_flip.html)\n- [ggplot2逆引き - x軸を並べ替えたい - Qiita](http://qiita.com/kazutan/items/7840f743d642122d1219)\n","coediting":false,"created_at":"2015-08-01T23:36:14+09:00","id":"5c4ee243c48a64b44b2d","private":false,"tags":[{"name":"R","versions":[]},{"name":"ggplot2逆引き","versions":[]}],"title":"ggplot2で縦軸と横軸をひっくり返したい","updated_at":"2015-08-01T23:36:14+09:00","url":"http://qiita.com/kazutan/items/5c4ee243c48a64b44b2d","user":{"description":"ただの残念なぞうさんです。同名のTwitterアカウントでほそぼそと。","facebook_id":"","followees_count":5,"followers_count":8,"github_login_name":"kazutan","id":"kazutan","items_count":9,"linkedin_id":"","location":"Hiroshima, Japan","name":"Maeda Kazuhiro","organization":"Hijiyama University","permanent_id":35118,"profile_image_url":"https://avatars.githubusercontent.com/u/10094206?v=3","twitter_screen_name":"kazutan","website_url":"http://kz-md.net/"}},{"rendered_body":"\n<h2>\n<span id=\"q\" class=\"fragment\"></span><a href=\"#q\"><i class=\"fa fa-link\"></i></a>Q</h2>\n\n<p>x軸を並べ替えたいのですが、どうすればいいのでしょうか。</p>\n\n<h2>\n<span id=\"a\" class=\"fragment\"></span><a href=\"#a\"><i class=\"fa fa-link\"></i></a>A</h2>\n\n<p>変数が連続変数か離散変数かによってかなり違ってきます。</p>\n\n<h3>\n<span id=\"連続的である場合\" class=\"fragment\"></span><a href=\"#%E9%80%A3%E7%B6%9A%E7%9A%84%E3%81%A7%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>連続的である場合</h3>\n\n<p>軸が連続的である場合、標準で昇順になるかと思います:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">example1a.R</span></div>\n<div class=\"highlight\"><pre>p <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>mtcars<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> gear<span class=\"p\">,</span> y <span class=\"o\">=</span> wt<span class=\"p\">))</span> <span class=\"o\">+</span> \n  geom_point<span class=\"p\">()</span>\np\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/f7959487-f0ef-68a8-7b56-1150951efcdf.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/f7959487-f0ef-68a8-7b56-1150951efcdf.png\" alt=\"example1a.R-1.png\"></a></p>\n\n<p>これを反転して降順にしたい場合は、<code>+ scale_x_reverse()</code>を追加します:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">example1b.R</span></div>\n<div class=\"highlight\"><pre>p <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>mtcars<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> gear<span class=\"p\">,</span> y <span class=\"o\">=</span> wt<span class=\"p\">))</span> <span class=\"o\">+</span> \n  geom_point<span class=\"p\">()</span> <span class=\"o\">+</span>\n  scale_x_reverse<span class=\"p\">()</span>\np\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/c50d0879-f82b-5f41-a06a-57c02ead5e00.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/c50d0879-f82b-5f41-a06a-57c02ead5e00.png\" alt=\"example1b.R-1.png\"></a></p>\n\n<h3>\n<span id=\"離散的である場合\" class=\"fragment\"></span><a href=\"#%E9%9B%A2%E6%95%A3%E7%9A%84%E3%81%A7%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>離散的である場合</h3>\n\n<p>多くの場合、factor型かと思います。</p>\n\n<h4>\n<span id=\"もとは数値データをasfactorで使っているパターン\" class=\"fragment\"></span><a href=\"#%E3%82%82%E3%81%A8%E3%81%AF%E6%95%B0%E5%80%A4%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92asfactor%E3%81%A7%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3\"><i class=\"fa fa-link\"></i></a>もとは数値データをas.factorで使っているパターン</h4>\n\n<p>以下のようなパターンを考えます:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">example2a.R</span></div>\n<div class=\"highlight\"><pre>p <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>mtcars<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> <span class=\"kp\">as.factor</span><span class=\"p\">(</span>gear<span class=\"p\">),</span> y <span class=\"o\">=</span> wt<span class=\"p\">))</span> <span class=\"o\">+</span>\n  geom_boxplot<span class=\"p\">()</span>\np\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/aa9121d2-93e0-05f3-9a65-15ce72442e68.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/aa9121d2-93e0-05f3-9a65-15ce72442e68.png\" alt=\"example2a.R-1.png\"></a></p>\n\n<p>この場合、以下のような変数を新たに算出し、<code>reorder</code>に組み込みます:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">example2b.R</span></div>\n<div class=\"highlight\"><pre>mtcars.v2 <span class=\"o\">&lt;-</span> <span class=\"kp\">transform</span><span class=\"p\">(</span>mtcars<span class=\"p\">,</span> gear2 <span class=\"o\">=</span> gear <span class=\"o\">*</span> <span class=\"m\">-1</span><span class=\"p\">)</span> <span class=\"c1\"># 値の順序が逆転する変数gear2を作成</span>\np <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>mtcars.v2<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> reorder<span class=\"p\">(</span>gear<span class=\"p\">,</span> gear2<span class=\"p\">),</span> y <span class=\"o\">=</span> wt<span class=\"p\">))</span> <span class=\"o\">+</span>\n  geom_boxplot<span class=\"p\">()</span>\np\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/6a3000eb-1e36-bfec-c07f-b521feb9dac7.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/6a3000eb-1e36-bfec-c07f-b521feb9dac7.png\" alt=\"example2b.R-1.png\"></a></p>\n\n<p><code>gear2</code>は値が負になりますが、この変数は<code>gear</code>の順番をreorderさせるためだけに使用するので問題ありません。</p>\n\n<h4>\n<span id=\"何か外的な基準に基づいて並べ替えたいパターン\" class=\"fragment\"></span><a href=\"#%E4%BD%95%E3%81%8B%E5%A4%96%E7%9A%84%E3%81%AA%E5%9F%BA%E6%BA%96%E3%81%AB%E5%9F%BA%E3%81%A5%E3%81%84%E3%81%A6%E4%B8%A6%E3%81%B9%E6%9B%BF%E3%81%88%E3%81%9F%E3%81%84%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3\"><i class=\"fa fa-link\"></i></a>何か外的な基準に基づいて並べ替えたいパターン</h4>\n\n<p>factor型の変数の順序を、他の変数の要約値(平均や中央値など)で並べ替えたい場合があります。以下を例にします:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">example3a.R</span></div>\n<div class=\"highlight\"><pre>ggplot<span class=\"p\">(</span>iris<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> Species<span class=\"p\">,</span> y <span class=\"o\">=</span> Sepal.Width<span class=\"p\">))</span> <span class=\"o\">+</span>\n  stat_summary<span class=\"p\">(</span>fun.y <span class=\"o\">=</span> <span class=\"kp\">mean</span><span class=\"p\">,</span> geom <span class=\"o\">=</span> <span class=\"s\">\"bar\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/58fc28d9-2b50-df83-d63d-c185ed3a861d.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/58fc28d9-2b50-df83-d63d-c185ed3a861d.png\" alt=\"example3a.R-1.png\"></a></p>\n\n<p>このx軸を、<code>Sepal.Width</code>の昇順で並べ替えるには、以下のようにします:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">example3b.R</span></div>\n<div class=\"highlight\"><pre>ggplot<span class=\"p\">(</span>iris<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> reorder<span class=\"p\">(</span>x <span class=\"o\">=</span> Species<span class=\"p\">,</span> X <span class=\"o\">=</span> Sepal.Width<span class=\"p\">,</span> FUN <span class=\"o\">=</span> <span class=\"kp\">mean</span><span class=\"p\">),</span> y <span class=\"o\">=</span> Sepal.Width<span class=\"p\">))</span> <span class=\"o\">+</span>\n  stat_summary<span class=\"p\">(</span>fun.y <span class=\"o\">=</span> <span class=\"kp\">mean</span><span class=\"p\">,</span> geom <span class=\"o\">=</span> <span class=\"s\">\"bar\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/c2e67563-40ad-9cc2-6c12-5f2e4e33bf3f.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/c2e67563-40ad-9cc2-6c12-5f2e4e33bf3f.png\" alt=\"example3b.R-1.png\"></a></p>\n\n<p>reorderの設定についてはこの変数のヘルプを確認してください。</p>\n\n<h4>\n<span id=\"順序的意味がないfactor型を任意に並べ替えたいパターン\" class=\"fragment\"></span><a href=\"#%E9%A0%86%E5%BA%8F%E7%9A%84%E6%84%8F%E5%91%B3%E3%81%8C%E3%81%AA%E3%81%84factor%E5%9E%8B%E3%82%92%E4%BB%BB%E6%84%8F%E3%81%AB%E4%B8%A6%E3%81%B9%E6%9B%BF%E3%81%88%E3%81%9F%E3%81%84%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3\"><i class=\"fa fa-link\"></i></a>順序的意味がないfactor型を任意に並べ替えたいパターン</h4>\n\n<p><strong>※ 2015/8/2修正: ggplot2ではfactor型のorderは考慮しないそうですので、該当箇所を削除して修正しました</strong>(<a href=\"/kohske\" class=\"user-mention\" title=\"kohske\">@kohske</a>さん<a href=\"/berobero11\" class=\"user-mention\" title=\"berobero11\">@berobero11</a>さんありがとうございました)<br><br>\n※ 大幅に改定することになったので、この箇所についてはほぼ書きなおしています。</p>\n\n<p>ggplot2では、factor型のlevelsで表示される順番で項目を並べます:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">level1.R</span></div>\n<div class=\"highlight\"><pre><span class=\"kp\">levels</span><span class=\"p\">(</span>iris<span class=\"o\">$</span>Species<span class=\"p\">)</span>\n\n<span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">]</span> <span class=\"s\">\"setosa\"</span>     <span class=\"s\">\"versicolor\"</span> <span class=\"s\">\"virginica\"</span>\n</pre></div>\n</div>\n\n<p>この順番は、<code>factor(x, levels = c(\"hoge\", ...))</code>で変更可能です。したがって、この順序を新たに設定すればそのようになります:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">level2.R</span></div>\n<div class=\"highlight\"><pre>iris2 <span class=\"o\">&lt;-</span> <span class=\"kp\">transform</span><span class=\"p\">(</span>iris<span class=\"p\">,</span> Species<span class=\"o\">=</span> <span class=\"kp\">factor</span><span class=\"p\">(</span>Species<span class=\"p\">,</span> levels <span class=\"o\">=</span> <span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"s\">\"virginica\"</span><span class=\"p\">,</span> <span class=\"s\">\"setosa\"</span><span class=\"p\">,</span> <span class=\"s\">\"versicolor\"</span><span class=\"p\">)))</span>\n</pre></div>\n</div>\n\n<p>なお、この時全てのlevelsを含めるよう注意してください。</p>\n\n<p>この<code>iris</code>と<code>iris2</code>を比較します:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">example4a.R</span></div>\n<div class=\"highlight\"><pre>ggplot<span class=\"p\">(</span>iris<span class=\"p\">,</span> aes<span class=\"p\">(</span>Species<span class=\"p\">))</span> <span class=\"o\">+</span> \n  geom_bar<span class=\"p\">()</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/7da3e6fd-c524-507a-0fde-ced5d28769ef.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/7da3e6fd-c524-507a-0fde-ced5d28769ef.png\" alt=\"example4a.R-1.png\"></a></p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">example4b.R</span></div>\n<div class=\"highlight\"><pre>ggplot<span class=\"p\">(</span>iris2<span class=\"p\">,</span> aes<span class=\"p\">(</span>Species<span class=\"p\">))</span> <span class=\"o\">+</span> \n  geom_bar<span class=\"p\">()</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/626b7f0d-3c36-a359-cf88-5171e0e7c1f5.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/626b7f0d-3c36-a359-cf88-5171e0e7c1f5.png\" alt=\"example4a.R-2.png\"></a></p>\n\n<p>このように、factor型の場合は順序を設定することで、任意に並べ替えることが可能です。</p>\n\n<h2>\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h2>\n\n<ul>\n<li><a href=\"http://docs.ggplot2.org/current/scale_continuous.html\">scale_x_continuous. ggplot2 0.9.3.1</a></li>\n</ul>\n","body":"## Q\nx軸を並べ替えたいのですが、どうすればいいのでしょうか。\n\n## A\n変数が連続変数か離散変数かによってかなり違ってきます。\n\n### 連続的である場合\n軸が連続的である場合、標準で昇順になるかと思います:\n\n\n```r:example1a.R\np <- ggplot(mtcars, aes(x = gear, y = wt)) + \n  geom_point()\np\n```\n\n![example1a.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/f7959487-f0ef-68a8-7b56-1150951efcdf.png)\n\nこれを反転して降順にしたい場合は、`+ scale_x_reverse()`を追加します:\n\n\n```r:example1b.R\np <- ggplot(mtcars, aes(x = gear, y = wt)) + \n  geom_point() +\n  scale_x_reverse()\np\n```\n\n![example1b.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/c50d0879-f82b-5f41-a06a-57c02ead5e00.png)\n\n\n### 離散的である場合\n多くの場合、factor型かと思います。\n\n#### もとは数値データをas.factorで使っているパターン\n以下のようなパターンを考えます:\n\n```r:example2a.R\np <- ggplot(mtcars, aes(x = as.factor(gear), y = wt)) +\n  geom_boxplot()\np\n```\n\n![example2a.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/aa9121d2-93e0-05f3-9a65-15ce72442e68.png)\n\nこの場合、以下のような変数を新たに算出し、`reorder`に組み込みます:\n\n```r:example2b.R\nmtcars.v2 <- transform(mtcars, gear2 = gear * -1) # 値の順序が逆転する変数gear2を作成\np <- ggplot(mtcars.v2, aes(x = reorder(gear, gear2), y = wt)) +\n  geom_boxplot()\np\n```\n\n![example2b.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/6a3000eb-1e36-bfec-c07f-b521feb9dac7.png)\n\n`gear2`は値が負になりますが、この変数は`gear`の順番をreorderさせるためだけに使用するので問題ありません。\n\n#### 何か外的な基準に基づいて並べ替えたいパターン\nfactor型の変数の順序を、他の変数の要約値(平均や中央値など)で並べ替えたい場合があります。以下を例にします:\n\n```r:example3a.R\nggplot(iris, aes(x = Species, y = Sepal.Width)) +\n  stat_summary(fun.y = mean, geom = \"bar\")\n```\n\n![example3a.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/58fc28d9-2b50-df83-d63d-c185ed3a861d.png)\n\nこのx軸を、`Sepal.Width`の昇順で並べ替えるには、以下のようにします:\n\n```r:example3b.R\nggplot(iris, aes(x = reorder(x = Species, X = Sepal.Width, FUN = mean), y = Sepal.Width)) +\n  stat_summary(fun.y = mean, geom = \"bar\")\n```\n\n![example3b.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/c2e67563-40ad-9cc2-6c12-5f2e4e33bf3f.png)\n\nreorderの設定についてはこの変数のヘルプを確認してください。\n\n\n#### 順序的意味がないfactor型を任意に並べ替えたいパターン\n**※ 2015/8/2修正: ggplot2ではfactor型のorderは考慮しないそうですので、該当箇所を削除して修正しました**(@kohskeさん@berobero11さんありがとうございました)  \n※ 大幅に改定することになったので、この箇所についてはほぼ書きなおしています。\n\nggplot2では、factor型のlevelsで表示される順番で項目を並べます:\n\n```r:level1.R\nlevels(iris$Species)\n\n[1] \"setosa\"     \"versicolor\" \"virginica\"\n```\n\nこの順番は、`factor(x, levels = c(\"hoge\", ...))`で変更可能です。したがって、この順序を新たに設定すればそのようになります:\n\n```r:level2.R\niris2 <- transform(iris, Species= factor(Species, levels = c(\"virginica\", \"setosa\", \"versicolor\")))\n```\n\nなお、この時全てのlevelsを含めるよう注意してください。\n\nこの`iris`と`iris2`を比較します:\n\n```r:example4a.R\nggplot(iris, aes(Species)) + \n  geom_bar()\n```\n\n![example4a.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/7da3e6fd-c524-507a-0fde-ced5d28769ef.png)\n\n```r:example4b.R\nggplot(iris2, aes(Species)) + \n  geom_bar()\n```\n\n![example4a.R-2.png](https://qiita-image-store.s3.amazonaws.com/0/35118/626b7f0d-3c36-a359-cf88-5171e0e7c1f5.png)\n\n\nこのように、factor型の場合は順序を設定することで、任意に並べ替えることが可能です。\n\n\n## 参考\n- [scale_x_continuous. ggplot2 0.9.3.1](http://docs.ggplot2.org/current/scale_continuous.html)\n\n\n","coediting":false,"created_at":"2015-08-01T23:23:28+09:00","id":"7840f743d642122d1219","private":false,"tags":[{"name":"R","versions":[]},{"name":"ggplot2逆引き","versions":[]}],"title":"x軸を並べ替えたい","updated_at":"2015-08-02T16:17:52+09:00","url":"http://qiita.com/kazutan/items/7840f743d642122d1219","user":{"description":"ただの残念なぞうさんです。同名のTwitterアカウントでほそぼそと。","facebook_id":"","followees_count":5,"followers_count":8,"github_login_name":"kazutan","id":"kazutan","items_count":9,"linkedin_id":"","location":"Hiroshima, Japan","name":"Maeda Kazuhiro","organization":"Hijiyama University","permanent_id":35118,"profile_image_url":"https://avatars.githubusercontent.com/u/10094206?v=3","twitter_screen_name":"kazutan","website_url":"http://kz-md.net/"}},{"rendered_body":"\n<h2>\n<span id=\"q1\" class=\"fragment\"></span><a href=\"#q1\"><i class=\"fa fa-link\"></i></a>Q1</h2>\n\n<p><code>ggplot2</code>を使って積み重ねの縦棒グラフを描くと、このようになります:</p>\n\n<div class=\"code-frame\" data-lang=\"R\">\n<div class=\"code-lang\"><span class=\"bold\">NG_example.R</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">require</span><span class=\"p\">(</span>ggplot2<span class=\"p\">)</span>\np <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>diamonds<span class=\"p\">,</span> aes<span class=\"p\">(</span><span class=\"kp\">cut</span><span class=\"p\">,</span> fill <span class=\"o\">=</span> clarity<span class=\"p\">))</span> <span class=\"o\">+</span> \n  geom_bar<span class=\"p\">()</span>\np\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/d5f861d8-6c36-1eda-6acf-9dc1d39f17f3.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/d5f861d8-6c36-1eda-6acf-9dc1d39f17f3.png\" alt=\"NG_example1.R-1.png\"></a></p>\n\n<p>しかし、これだと積み重ねの順番と凡例の順番が逆になります。凡例を逆順にしたいのですがどうすればいいでしょうか?</p>\n\n<h2>\n<span id=\"a1\" class=\"fragment\"></span><a href=\"#a1\"><i class=\"fa fa-link\"></i></a>A1</h2>\n\n<p><code>guide_legend(reverse = TRUE)</code>を活用すると逆順になります:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example1.R</span></div>\n<div class=\"highlight\"><pre>p <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>diamonds<span class=\"p\">,</span> aes<span class=\"p\">(</span><span class=\"kp\">cut</span><span class=\"p\">,</span> fill <span class=\"o\">=</span> clarity<span class=\"p\">))</span> <span class=\"o\">+</span> \n  geom_bar<span class=\"p\">()</span> <span class=\"o\">+</span>\n  guides<span class=\"p\">(</span>fill <span class=\"o\">=</span> guide_legend<span class=\"p\">(</span>reverse <span class=\"o\">=</span> <span class=\"kc\">TRUE</span><span class=\"p\">))</span>\np\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/f4485177-e2ed-e086-1843-017693f728f1.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/f4485177-e2ed-e086-1843-017693f728f1.png\" alt=\"OK_example1.R-1.png\"></a></p>\n\n<p>この<code>guides(fill = guide_legend(reverse = TRUE))</code>によって、<code>aes(fill = )</code>で指定したfactorの順番が逆順となります。<code>aes(colour = )</code>で指定したfactorについては、以下のようにしてください:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example1b.R</span></div>\n<div class=\"highlight\"><pre>p <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>diamonds<span class=\"p\">,</span> aes<span class=\"p\">(</span><span class=\"kp\">cut</span><span class=\"p\">,</span> colour <span class=\"o\">=</span> clarity<span class=\"p\">))</span> <span class=\"o\">+</span> \n  geom_bar<span class=\"p\">(</span>fill <span class=\"o\">=</span> <span class=\"s\">\"white\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  guides<span class=\"p\">(</span>colour <span class=\"o\">=</span> guide_legend<span class=\"p\">(</span>reverse <span class=\"o\">=</span> <span class=\"kc\">TRUE</span><span class=\"p\">))</span>\np\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/6bda0d13-48cd-1a84-9902-a6bf1305d14b.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/6bda0d13-48cd-1a84-9902-a6bf1305d14b.png\" alt=\"OK_example1b.R-1.png\"></a></p>\n\n<p>これらは棒グラフ以外でも有効です。ただし、凡例(legend)内の順序が反転するだけです。</p>\n\n<h2>\n<span id=\"q2\" class=\"fragment\"></span><a href=\"#q2\"><i class=\"fa fa-link\"></i></a>Q2</h2>\n\n<p><code>ggplot2</code>で、「色と形」というように凡例に表示させるものが2種類以上ある場合、その変数の順番は変更できるのでしょうか。例えば以下のような場合です:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">NG_example2.R</span></div>\n<div class=\"highlight\"><pre>p <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>diamonds<span class=\"p\">,</span> aes<span class=\"p\">(</span>carat<span class=\"p\">,</span> price<span class=\"p\">,</span> colour <span class=\"o\">=</span> clarity<span class=\"p\">,</span> shape <span class=\"o\">=</span> <span class=\"kp\">cut</span><span class=\"p\">))</span> <span class=\"o\">+</span>\n  geom_point<span class=\"p\">()</span> <span class=\"o\">+</span>\n  theme<span class=\"p\">(</span>legend.position <span class=\"o\">=</span> <span class=\"s\">\"top\"</span><span class=\"p\">)</span>\np\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/c9587ce5-1253-cf18-0b96-b2d183f3c295.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/c9587ce5-1253-cf18-0b96-b2d183f3c295.png\" alt=\"NG_examle2.R-1.png\"></a></p>\n\n<p>このとき、オプションを指定する順番を入れ替えたり、<code>shape</code>と<code>colour</code>で指定する変数を入れ替えたりしても、必ずcutが上にくるようになります。これを入れ替える方法はあるのでしょうか?</p>\n\n<h2>\n<span id=\"a2\" class=\"fragment\"></span><a href=\"#a2\"><i class=\"fa fa-link\"></i></a>A2</h2>\n\n<p>version 0.9.2より、<code>guide_legend(order = )</code>で順番を指定することができます:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example2.R</span></div>\n<div class=\"highlight\"><pre>p <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>diamonds<span class=\"p\">,</span> aes<span class=\"p\">(</span>carat<span class=\"p\">,</span> price<span class=\"p\">,</span> colour <span class=\"o\">=</span> clarity<span class=\"p\">,</span> shape <span class=\"o\">=</span> <span class=\"kp\">cut</span><span class=\"p\">))</span> <span class=\"o\">+</span>\n  geom_point<span class=\"p\">()</span> <span class=\"o\">+</span>\n  theme<span class=\"p\">(</span>legend.position <span class=\"o\">=</span> <span class=\"s\">\"top\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  guides<span class=\"p\">(</span>shape <span class=\"o\">=</span> guide_legend<span class=\"p\">(</span>order <span class=\"o\">=</span> <span class=\"m\">2</span><span class=\"p\">),</span>\n         colour <span class=\"o\">=</span> guide_legend<span class=\"p\">(</span>order <span class=\"o\">=</span> <span class=\"m\">1</span><span class=\"p\">))</span>\np\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/27b54318-6c43-ca04-2680-f360ab4bbff8.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/27b54318-6c43-ca04-2680-f360ab4bbff8.png\" alt=\"OK_example2.R-1.png\"></a></p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example2b.R</span></div>\n<div class=\"highlight\"><pre>p <span class=\"o\">+</span> guides<span class=\"p\">(</span>shape <span class=\"o\">=</span> guide_legend<span class=\"p\">(</span>order <span class=\"o\">=</span> <span class=\"m\">1</span><span class=\"p\">),</span>\n         colour <span class=\"o\">=</span> guide_legend<span class=\"p\">(</span>order <span class=\"o\">=</span> <span class=\"m\">2</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/55eff607-cbe9-87e2-7fcb-0b81b66db917.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/55eff607-cbe9-87e2-7fcb-0b81b66db917.png\" alt=\"OK_example2.R-2.png\"></a></p>\n\n<p>なお<code>guide_legend</code>としているように、設定があたるのは凡例(legend)だけです。</p>\n\n<h2>\n<span id=\"q3-コメント指摘より201582に追記\" class=\"fragment\"></span><a href=\"#q3-%E3%82%B3%E3%83%A1%E3%83%B3%E3%83%88%E6%8C%87%E6%91%98%E3%82%88%E3%82%8A201582%E3%81%AB%E8%BF%BD%E8%A8%98\"><i class=\"fa fa-link\"></i></a>Q3 (コメント指摘より2015/8/2に追記)</h2>\n\n<p>上の内容は離散的な変数の凡例ですが、連続的な変数の凡例(colourbar)ではできますか?</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">NG_example3.R</span></div>\n<div class=\"highlight\"><pre>p <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>iris<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> Species<span class=\"p\">,</span> y <span class=\"o\">=</span> Sepal.Length<span class=\"p\">,</span> colour <span class=\"o\">=</span> Sepal.Width<span class=\"p\">))</span> <span class=\"o\">+</span> \n  geom_point<span class=\"p\">()</span>\np\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/e2a920d3-316f-24da-f795-d35261d13361.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/e2a920d3-316f-24da-f795-d35261d13361.png\" alt=\"NG_example3.R-1.png\"></a></p>\n\n<h2>\n<span id=\"a3\" class=\"fragment\"></span><a href=\"#a3\"><i class=\"fa fa-link\"></i></a>A3</h2>\n\n<p>可能です。Q1の<code>reverse = TRUE</code>やQ2の<code>order = hoge</code>のオプションは<code>guide_colourbar</code>も対応しています。まず<code>reverse</code>での例はこちらです:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example3.R</span></div>\n<div class=\"highlight\"><pre>p <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>iris<span class=\"p\">,</span> aes<span class=\"p\">(</span>x <span class=\"o\">=</span> Species<span class=\"p\">,</span> y <span class=\"o\">=</span> Sepal.Length<span class=\"p\">,</span> colour <span class=\"o\">=</span> Sepal.Width<span class=\"p\">))</span> <span class=\"o\">+</span> \n  geom_point<span class=\"p\">()</span> <span class=\"o\">+</span>\n  guides<span class=\"p\">(</span>colour <span class=\"o\">=</span> guide_colourbar<span class=\"p\">(</span>reverse <span class=\"o\">=</span> <span class=\"kc\">TRUE</span><span class=\"p\">))</span>\np\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/d557aa2f-522d-4974-5ee9-7df527024a75.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/d557aa2f-522d-4974-5ee9-7df527024a75.png\" alt=\"OK_example3.R-1.png\"></a></p>\n\n<p><code>order</code>での例はこちらです:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example4.R</span></div>\n<div class=\"highlight\"><pre>p <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>diamonds<span class=\"p\">,</span> aes<span class=\"p\">(</span>carat<span class=\"p\">,</span> price<span class=\"p\">,</span> colour <span class=\"o\">=</span> depth<span class=\"p\">,</span> shape <span class=\"o\">=</span> <span class=\"kp\">cut</span><span class=\"p\">))</span> <span class=\"o\">+</span>\n  geom_point<span class=\"p\">()</span> <span class=\"o\">+</span>\n  theme<span class=\"p\">(</span>legend.position <span class=\"o\">=</span> <span class=\"s\">\"top\"</span><span class=\"p\">)</span> <span class=\"o\">+</span>\n  guides<span class=\"p\">(</span>shape <span class=\"o\">=</span> guide_legend<span class=\"p\">(</span>order <span class=\"o\">=</span> <span class=\"m\">1</span><span class=\"p\">),</span>\n         colour <span class=\"o\">=</span> guide_colourbar<span class=\"p\">(</span>order <span class=\"o\">=</span> <span class=\"m\">2</span><span class=\"p\">))</span>\np\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/35118/5d8ec97e-947e-8885-be28-540d0c85f389.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/5d8ec97e-947e-8885-be28-540d0c85f389.png\" alt=\"OK_example4.R-1.png\"></a></p>\n\n<p><code>guides</code>をつけていないと、<code>colourbar</code>のdepthが優先されて上に来ますが、このコードのように設定すると下に来ます。</p>\n\n<h2>\n<span id=\"参考\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83\"><i class=\"fa fa-link\"></i></a>参考</h2>\n\n<ul>\n<li><a href=\"http://docs.ggplot2.org/current/guide_legend.html\">guide_legend. ggplot2 0.9.3.1</a></li>\n<li>\n<a href=\"http://docs.ggplot2.org/current/guide_colourbar.html\">guide_colourbar. ggplot2 0.9.3.1</a> (Q3に対応して追加, 2015/8/2)</li>\n<li><a href=\"http://stackoverflow.com/questions/9577680/r-sort-legend-in-ggplot2\">R: sort legend in ggplot2 - Stack Overflow</a></li>\n<li><a href=\"http://stackoverflow.com/questions/11393123/controlling-ggplot2-legend-display-order\">r - Controlling ggplot2 legend display order - Stack Overflow</a></li>\n</ul>\n","body":"## Q1\n`ggplot2`を使って積み重ねの縦棒グラフを描くと、このようになります:\n\n\n```R:NG_example.R\nrequire(ggplot2)\np <- ggplot(diamonds, aes(cut, fill = clarity)) + \n  geom_bar()\np\n```\n\n![NG_example1.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/d5f861d8-6c36-1eda-6acf-9dc1d39f17f3.png)\n\nしかし、これだと積み重ねの順番と凡例の順番が逆になります。凡例を逆順にしたいのですがどうすればいいでしょうか?\n\n## A1\n`guide_legend(reverse = TRUE)`を活用すると逆順になります:\n\n```r:OK_example1.R\np <- ggplot(diamonds, aes(cut, fill = clarity)) + \n  geom_bar() +\n  guides(fill = guide_legend(reverse = TRUE))\np\n```\n\n![OK_example1.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/f4485177-e2ed-e086-1843-017693f728f1.png)\n\nこの`guides(fill = guide_legend(reverse = TRUE))`によって、`aes(fill = )`で指定したfactorの順番が逆順となります。`aes(colour = )`で指定したfactorについては、以下のようにしてください:\n\n```r:OK_example1b.R\np <- ggplot(diamonds, aes(cut, colour = clarity)) + \n  geom_bar(fill = \"white\") +\n  guides(colour = guide_legend(reverse = TRUE))\np\n```\n\n![OK_example1b.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/6bda0d13-48cd-1a84-9902-a6bf1305d14b.png)\n\nこれらは棒グラフ以外でも有効です。ただし、凡例(legend)内の順序が反転するだけです。\n\n## Q2\n`ggplot2`で、「色と形」というように凡例に表示させるものが2種類以上ある場合、その変数の順番は変更できるのでしょうか。例えば以下のような場合です:\n\n```r:NG_example2.R\np <- ggplot(diamonds, aes(carat, price, colour = clarity, shape = cut)) +\n  geom_point() +\n  theme(legend.position = \"top\")\np\n```\n\n![NG_examle2.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/c9587ce5-1253-cf18-0b96-b2d183f3c295.png)\n\nこのとき、オプションを指定する順番を入れ替えたり、`shape`と`colour`で指定する変数を入れ替えたりしても、必ずcutが上にくるようになります。これを入れ替える方法はあるのでしょうか?\n\n## A2\nversion 0.9.2より、`guide_legend(order = )`で順番を指定することができます:\n\n```r:OK_example2.R\np <- ggplot(diamonds, aes(carat, price, colour = clarity, shape = cut)) +\n  geom_point() +\n  theme(legend.position = \"top\") +\n  guides(shape = guide_legend(order = 2),\n         colour = guide_legend(order = 1))\np\n```\n\n![OK_example2.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/27b54318-6c43-ca04-2680-f360ab4bbff8.png)\n\n```r:OK_example2b.R\np + guides(shape = guide_legend(order = 1),\n         colour = guide_legend(order = 2))\n```\n\n![OK_example2.R-2.png](https://qiita-image-store.s3.amazonaws.com/0/35118/55eff607-cbe9-87e2-7fcb-0b81b66db917.png)\n\n\nなお`guide_legend`としているように、設定があたるのは凡例(legend)だけです。\n\n## Q3 (コメント指摘より2015/8/2に追記)\n上の内容は離散的な変数の凡例ですが、連続的な変数の凡例(colourbar)ではできますか?\n\n```r:NG_example3.R\np <- ggplot(iris, aes(x = Species, y = Sepal.Length, colour = Sepal.Width)) + \n  geom_point()\np\n```\n\n![NG_example3.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/e2a920d3-316f-24da-f795-d35261d13361.png)\n\n## A3\n可能です。Q1の`reverse = TRUE`やQ2の`order = hoge`のオプションは`guide_colourbar`も対応しています。まず`reverse`での例はこちらです:\n\n\n```r:OK_example3.R\np <- ggplot(iris, aes(x = Species, y = Sepal.Length, colour = Sepal.Width)) + \n  geom_point() +\n  guides(colour = guide_colourbar(reverse = TRUE))\np\n```\n\n![OK_example3.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/d557aa2f-522d-4974-5ee9-7df527024a75.png)\n\n`order`での例はこちらです:\n\n```r:OK_example4.R\np <- ggplot(diamonds, aes(carat, price, colour = depth, shape = cut)) +\n  geom_point() +\n  theme(legend.position = \"top\") +\n  guides(shape = guide_legend(order = 1),\n         colour = guide_colourbar(order = 2))\np\n```\n\n![OK_example4.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/5d8ec97e-947e-8885-be28-540d0c85f389.png)\n\n`guides`をつけていないと、`colourbar`のdepthが優先されて上に来ますが、このコードのように設定すると下に来ます。\n\n## 参考\n- [guide_legend. ggplot2 0.9.3.1](http://docs.ggplot2.org/current/guide_legend.html)\n- [guide_colourbar. ggplot2 0.9.3.1](http://docs.ggplot2.org/current/guide_colourbar.html) (Q3に対応して追加, 2015/8/2)\n- [R: sort legend in ggplot2 - Stack Overflow](http://stackoverflow.com/questions/9577680/r-sort-legend-in-ggplot2)\n- [r - Controlling ggplot2 legend display order - Stack Overflow](http://stackoverflow.com/questions/11393123/controlling-ggplot2-legend-display-order)\n","coediting":false,"created_at":"2015-08-01T17:33:33+09:00","id":"fd958c781d8bebd8b8b8","private":false,"tags":[{"name":"R","versions":[]},{"name":"ggplot2逆引き","versions":[]}],"title":"ggplot2で凡例を並び替えたい","updated_at":"2015-08-02T19:51:53+09:00","url":"http://qiita.com/kazutan/items/fd958c781d8bebd8b8b8","user":{"description":"ただの残念なぞうさんです。同名のTwitterアカウントでほそぼそと。","facebook_id":"","followees_count":5,"followers_count":8,"github_login_name":"kazutan","id":"kazutan","items_count":9,"linkedin_id":"","location":"Hiroshima, Japan","name":"Maeda Kazuhiro","organization":"Hijiyama University","permanent_id":35118,"profile_image_url":"https://avatars.githubusercontent.com/u/10094206?v=3","twitter_screen_name":"kazutan","website_url":"http://kz-md.net/"}},{"rendered_body":"\n<h1>\n<span id=\"q\" class=\"fragment\"></span><a href=\"#q\"><i class=\"fa fa-link\"></i></a>Q.</h1>\n\n<p>正規分布に従っていると考えられるデータに対して正規分布をあてはめたいです。最尤推定で平均パラメータと標準偏差パラメータを求めて、求めた結果の正規分布を描きたいです。</p>\n\n<h1>\n<span id=\"a\" class=\"fragment\"></span><a href=\"#a\"><i class=\"fa fa-link\"></i></a>A.</h1>\n\n<p>「<a href=\"http://qiita.com/berobero11/items/a6522a6e6561f8ca7b96\">正規分布など好きな関数の曲線を描きたい</a>」を参考にします。以下、コード例です。</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example.R</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">library</span><span class=\"p\">(</span>ggplot2<span class=\"p\">)</span>\n\n<span class=\"kp\">set.seed</span><span class=\"p\">(</span><span class=\"m\">123</span><span class=\"p\">)</span>\nX <span class=\"o\">&lt;-</span> rnorm<span class=\"p\">(</span><span class=\"m\">20</span><span class=\"p\">,</span> mean<span class=\"o\">=</span><span class=\"m\">0.3</span><span class=\"p\">,</span> sd<span class=\"o\">=</span><span class=\"m\">1.2</span><span class=\"p\">)</span>\n\nlogLikelihood <span class=\"o\">&lt;-</span> <span class=\"kr\">function</span><span class=\"p\">(</span><span class=\"kp\">args</span><span class=\"p\">,</span> x<span class=\"p\">){</span>\n  likelihood <span class=\"o\">&lt;-</span> <span class=\"m\">1</span><span class=\"o\">/</span><span class=\"kp\">sqrt</span><span class=\"p\">(</span><span class=\"m\">2</span><span class=\"o\">*</span><span class=\"kc\">pi</span><span class=\"o\">*</span><span class=\"kp\">args</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]</span><span class=\"o\">^</span><span class=\"m\">2</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"kp\">exp</span><span class=\"p\">(</span><span class=\"m\">-0.5</span><span class=\"o\">*</span><span class=\"p\">((</span>x<span class=\"o\">-</span><span class=\"kp\">args</span><span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">])</span><span class=\"o\">/</span><span class=\"kp\">args</span><span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">])</span><span class=\"o\">^</span><span class=\"m\">2</span><span class=\"p\">)</span>\n  <span class=\"kr\">return</span><span class=\"p\">(</span><span class=\"kp\">sum</span><span class=\"p\">(</span><span class=\"kp\">log</span><span class=\"p\">(</span>likelihood<span class=\"p\">)))</span>\n<span class=\"p\">}</span>\n\nmle <span class=\"o\">&lt;-</span> optim<span class=\"p\">(</span>par<span class=\"o\">=</span><span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"m\">1</span><span class=\"p\">),</span> fn<span class=\"o\">=</span>logLikelihood<span class=\"p\">,</span> x<span class=\"o\">=</span>X<span class=\"p\">,</span> control<span class=\"o\">=</span><span class=\"kt\">list</span><span class=\"p\">(</span>fnscale<span class=\"o\">=</span><span class=\"m\">-1</span><span class=\"p\">))</span><span class=\"o\">$</span>par\nd <span class=\"o\">&lt;-</span> <span class=\"kt\">data.frame</span><span class=\"p\">(</span>x<span class=\"o\">=</span>X<span class=\"p\">,</span> y<span class=\"o\">=</span><span class=\"m\">0</span><span class=\"p\">,</span> xend<span class=\"o\">=</span>X<span class=\"p\">,</span> yend<span class=\"o\">=</span>dnorm<span class=\"p\">(</span>X<span class=\"p\">,</span> mean<span class=\"o\">=</span>mle<span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">],</span> sd<span class=\"o\">=</span>mle<span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]))</span>\n\np <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">()</span>\np <span class=\"o\">&lt;-</span> p <span class=\"o\">+</span> geom_rug<span class=\"p\">(</span>data<span class=\"o\">=</span><span class=\"kt\">data.frame</span><span class=\"p\">(</span>X<span class=\"o\">=</span>X<span class=\"p\">),</span> aes<span class=\"p\">(</span>x<span class=\"o\">=</span>X<span class=\"p\">),</span> sides<span class=\"o\">=</span><span class=\"s\">\"b\"</span><span class=\"p\">)</span>\np <span class=\"o\">&lt;-</span> p <span class=\"o\">+</span> geom_segment<span class=\"p\">(</span>data<span class=\"o\">=</span>d<span class=\"p\">,</span> aes<span class=\"p\">(</span>x<span class=\"o\">=</span>x<span class=\"p\">,</span> y<span class=\"o\">=</span>y<span class=\"p\">,</span> xend<span class=\"o\">=</span>xend<span class=\"p\">,</span> yend<span class=\"o\">=</span>yend<span class=\"p\">),</span> linetype<span class=\"o\">=</span><span class=\"s\">\"dotted\"</span><span class=\"p\">,</span> size<span class=\"o\">=</span><span class=\"m\">0.25</span><span class=\"p\">)</span>\np <span class=\"o\">&lt;-</span> p <span class=\"o\">+</span> stat_function<span class=\"p\">(</span>data<span class=\"o\">=</span><span class=\"kt\">data.frame</span><span class=\"p\">(</span>X<span class=\"o\">=</span><span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"m\">-4</span><span class=\"p\">,</span><span class=\"m\">4</span><span class=\"p\">)),</span> aes<span class=\"p\">(</span>x<span class=\"o\">=</span>X<span class=\"p\">),</span> fun<span class=\"o\">=</span>dnorm<span class=\"p\">,</span> args<span class=\"o\">=</span><span class=\"kt\">list</span><span class=\"p\">(</span>mean<span class=\"o\">=</span>mle<span class=\"p\">[</span><span class=\"m\">1</span><span class=\"p\">],</span> sd<span class=\"o\">=</span>mle<span class=\"p\">[</span><span class=\"m\">2</span><span class=\"p\">]))</span>\n</pre></div>\n</div>\n\n<p><code>logLikelihood</code>関数で対数尤度を定義しています。他の関数をあてはめるときはここを変えます。最尤推定は<code>optim</code>が便利だと思います。使い方の詳細は他のサイトを参照してください。</p>\n\n<p>ラグを描きたい時はそのものである<code>geom_rug</code>がありますのでそれを使います。つながらない線分を描くときは<code>geom_segment</code>で描いていきます。これでラグから関数までの点線を描いています。そして、既存の関数を描くときは<code>stat_function</code>を使うのでした。</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/12869/bf7f0479-7203-29f3-4d0c-ec35aa83ac50.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/12869/bf7f0479-7203-29f3-4d0c-ec35aa83ac50.png\" alt=\"OK.png\"></a></p>\n\n<h1>\n<span id=\"参考資料\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83%E8%B3%87%E6%96%99\"><i class=\"fa fa-link\"></i></a>参考資料</h1>\n\n<p><a href=\"http://stackoverflow.com/questions/17649759/fitting-gaussian-to-data-geom-point-in-ggplot2/17650549#17650549\">http://stackoverflow.com/questions/17649759/fitting-gaussian-to-data-geom-point-in-ggplot2/17650549#17650549</a><br>\n<a href=\"http://nekopuni.holy.jp/2013/12/r%E6%9C%80%E9%81%A9%E5%8C%96%E3%80%80%E6%9C%80%E5%B0%A4%E6%8E%A8%E5%AE%9A%E3%81%AE%E7%B7%B4%E7%BF%92/\">http://nekopuni.holy.jp/2013/12/r%E6%9C%80%E9%81%A9%E5%8C%96%E3%80%80%E6%9C%80%E5%B0%A4%E6%8E%A8%E5%AE%9A%E3%81%AE%E7%B7%B4%E7%BF%92/</a></p>\n","body":"# Q.\n正規分布に従っていると考えられるデータに対して正規分布をあてはめたいです。最尤推定で平均パラメータと標準偏差パラメータを求めて、求めた結果の正規分布を描きたいです。\n\n# A.\n「[正規分布など好きな関数の曲線を描きたい](http://qiita.com/berobero11/items/a6522a6e6561f8ca7b96)」を参考にします。以下、コード例です。\n\n```OK_example.R\nlibrary(ggplot2)\n\nset.seed(123)\nX <- rnorm(20, mean=0.3, sd=1.2)\n\nlogLikelihood <- function(args, x){\n  likelihood <- 1/sqrt(2*pi*args[2]^2)*exp(-0.5*((x-args[1])/args[2])^2)\n  return(sum(log(likelihood)))\n}\n\nmle <- optim(par=c(0,1), fn=logLikelihood, x=X, control=list(fnscale=-1))$par\nd <- data.frame(x=X, y=0, xend=X, yend=dnorm(X, mean=mle[1], sd=mle[2]))\n\np <- ggplot()\np <- p + geom_rug(data=data.frame(X=X), aes(x=X), sides=\"b\")\np <- p + geom_segment(data=d, aes(x=x, y=y, xend=xend, yend=yend), linetype=\"dotted\", size=0.25)\np <- p + stat_function(data=data.frame(X=c(-4,4)), aes(x=X), fun=dnorm, args=list(mean=mle[1], sd=mle[2]))\n```\n\n`logLikelihood`関数で対数尤度を定義しています。他の関数をあてはめるときはここを変えます。最尤推定は`optim`が便利だと思います。使い方の詳細は他のサイトを参照してください。\n\nラグを描きたい時はそのものである`geom_rug`がありますのでそれを使います。つながらない線分を描くときは`geom_segment`で描いていきます。これでラグから関数までの点線を描いています。そして、既存の関数を描くときは`stat_function`を使うのでした。\n\n![OK.png](https://qiita-image-store.s3.amazonaws.com/0/12869/bf7f0479-7203-29f3-4d0c-ec35aa83ac50.png)\n\n\n# 参考資料\nhttp://stackoverflow.com/questions/17649759/fitting-gaussian-to-data-geom-point-in-ggplot2/17650549#17650549\nhttp://nekopuni.holy.jp/2013/12/r%E6%9C%80%E9%81%A9%E5%8C%96%E3%80%80%E6%9C%80%E5%B0%A4%E6%8E%A8%E5%AE%9A%E3%81%AE%E7%B7%B4%E7%BF%92/\n","coediting":false,"created_at":"2015-08-01T12:00:22+09:00","id":"dee173124fa9c894052f","private":false,"tags":[{"name":"R","versions":[]},{"name":"ggplot2逆引き","versions":[]}],"title":"最尤推定であてはめて正規分布を描く","updated_at":"2015-08-01T12:00:22+09:00","url":"http://qiita.com/berobero11/items/dee173124fa9c894052f","user":{"description":{},"facebook_id":{},"followees_count":38,"followers_count":23,"github_login_name":{},"id":"berobero11","items_count":6,"linkedin_id":{},"location":{},"name":"","organization":{},"permanent_id":12869,"profile_image_url":"https://pbs.twimg.com/profile_images/620606111159181313/If4Pg1hB_normal.png","twitter_screen_name":"berobero11","website_url":{}}},{"rendered_body":"\n<h1>\n<span id=\"q\" class=\"fragment\"></span><a href=\"#q\"><i class=\"fa fa-link\"></i></a>Q.</h1>\n\n<p>正規分布とか二次曲線とか好きな関数の曲線を描きたいのですが。</p>\n\n<h1>\n<span id=\"a\" class=\"fragment\"></span><a href=\"#a\"><i class=\"fa fa-link\"></i></a>A.</h1>\n\n<h2>\n<span id=\"基本\" class=\"fragment\"></span><a href=\"#%E5%9F%BA%E6%9C%AC\"><i class=\"fa fa-link\"></i></a>基本</h2>\n\n<p><code>stat_function</code>を使うのがお手軽です。</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example1.R</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">library</span><span class=\"p\">(</span>ggplot2<span class=\"p\">)</span>\n\np <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>data<span class=\"o\">=</span><span class=\"kt\">data.frame</span><span class=\"p\">(</span>X<span class=\"o\">=</span><span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"m\">-4</span><span class=\"p\">,</span><span class=\"m\">4</span><span class=\"p\">)),</span> aes<span class=\"p\">(</span>x<span class=\"o\">=</span>X<span class=\"p\">))</span>\np <span class=\"o\">&lt;-</span> p <span class=\"o\">+</span> stat_function<span class=\"p\">(</span>fun<span class=\"o\">=</span>dnorm<span class=\"p\">)</span>\np <span class=\"o\">&lt;-</span> p <span class=\"o\">+</span> stat_function<span class=\"p\">(</span>fun<span class=\"o\">=</span>dnorm<span class=\"p\">,</span> args<span class=\"o\">=</span><span class=\"kt\">list</span><span class=\"p\">(</span>mean<span class=\"o\">=</span><span class=\"m\">2</span><span class=\"p\">,</span> sd<span class=\"o\">=</span><span class=\"m\">.5</span><span class=\"p\">))</span>\np <span class=\"o\">&lt;-</span> p <span class=\"o\">+</span> stat_function<span class=\"p\">(</span>fun<span class=\"o\">=</span><span class=\"kr\">function</span><span class=\"p\">(</span>x<span class=\"p\">)</span> <span class=\"m\">0.01</span><span class=\"o\">*</span>x<span class=\"o\">^</span><span class=\"m\">2-0.1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p><code>ggplot</code>で描画範囲を指定して、<code>stat_function</code>の<code>fun=</code>で関数を指定します。関数に引数がある場合は<code>args=</code>で<code>list</code>を渡します。<br>\n<a href=\"https://qiita-image-store.s3.amazonaws.com/0/12869/b4f1875a-0b44-e13f-afa1-5acc8f75c812.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/12869/b4f1875a-0b44-e13f-afa1-5acc8f75c812.png\" alt=\"OK1.png\"></a></p>\n\n<h2>\n<span id=\"例外-関数ごとに描画範囲が異なる場合\" class=\"fragment\"></span><a href=\"#%E4%BE%8B%E5%A4%96-%E9%96%A2%E6%95%B0%E3%81%94%E3%81%A8%E3%81%AB%E6%8F%8F%E7%94%BB%E7%AF%84%E5%9B%B2%E3%81%8C%E7%95%B0%E3%81%AA%E3%82%8B%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>例外: 関数ごとに描画範囲が異なる場合</h2>\n\n<p><code>geom_path</code>を使います。</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example2.R</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">library</span><span class=\"p\">(</span>ggplot2<span class=\"p\">)</span>\n\np <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>aes<span class=\"p\">(</span>x<span class=\"o\">=</span>X<span class=\"p\">,</span>y<span class=\"o\">=</span>Y<span class=\"p\">))</span>\np <span class=\"o\">&lt;-</span> p <span class=\"o\">+</span> geom_path<span class=\"p\">(</span>data<span class=\"o\">=</span><span class=\"kt\">data.frame</span><span class=\"p\">(</span>X<span class=\"o\">=</span>x<span class=\"o\">&lt;-</span><span class=\"kp\">seq</span><span class=\"p\">(</span><span class=\"m\">-2</span><span class=\"p\">,</span><span class=\"m\">2</span><span class=\"p\">,</span>len<span class=\"o\">=</span><span class=\"m\">101</span><span class=\"p\">),</span> Y<span class=\"o\">=</span>dnorm<span class=\"p\">(</span>x<span class=\"p\">)))</span>\np <span class=\"o\">&lt;-</span> p <span class=\"o\">+</span> geom_path<span class=\"p\">(</span>data<span class=\"o\">=</span><span class=\"kt\">data.frame</span><span class=\"p\">(</span>X<span class=\"o\">=</span>x<span class=\"o\">&lt;-</span><span class=\"kp\">seq</span><span class=\"p\">(</span><span class=\"m\">-3</span><span class=\"p\">,</span><span class=\"m\">3</span><span class=\"p\">,</span>len<span class=\"o\">=</span><span class=\"m\">101</span><span class=\"p\">),</span> Y<span class=\"o\">=</span>dnorm<span class=\"p\">(</span>x<span class=\"p\">,</span> mean<span class=\"o\">=</span><span class=\"m\">2</span><span class=\"p\">,</span> sd<span class=\"o\">=</span><span class=\"m\">.5</span><span class=\"p\">)))</span>\np <span class=\"o\">&lt;-</span> p <span class=\"o\">+</span> geom_path<span class=\"p\">(</span>data<span class=\"o\">=</span><span class=\"kt\">data.frame</span><span class=\"p\">(</span>X<span class=\"o\">=</span>x<span class=\"o\">&lt;-</span><span class=\"kp\">seq</span><span class=\"p\">(</span><span class=\"m\">-4</span><span class=\"p\">,</span><span class=\"m\">4</span><span class=\"p\">,</span>len<span class=\"o\">=</span><span class=\"m\">101</span><span class=\"p\">),</span> Y<span class=\"o\">=</span><span class=\"m\">0.01</span><span class=\"o\">*</span>x<span class=\"o\">^</span><span class=\"m\">2-0.1</span><span class=\"p\">))</span>\n</pre></div>\n</div>\n\n<p>X軸の値とY軸の値を持つ<code>data.frame</code>を作って<code>geom_path</code>に渡して線分がつながったものとして描画します。上のコード例では<code>geom_path</code>内で<code>x</code>に値を代入しつつ<code>data.frame</code>にしているおかげで、後ろの<code>dnorm</code>でその<code>x</code>を使える点に注意です。</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/12869/c6c74bbf-f459-d0ac-576e-cf53cfacb3ca.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/12869/c6c74bbf-f459-d0ac-576e-cf53cfacb3ca.png\" alt=\"OK2.png\"></a></p>\n\n<h2>\n<span id=\"応用編-パラメータの値を振った関数を重ねて描く\" class=\"fragment\"></span><a href=\"#%E5%BF%9C%E7%94%A8%E7%B7%A8-%E3%83%91%E3%83%A9%E3%83%A1%E3%83%BC%E3%82%BF%E3%81%AE%E5%80%A4%E3%82%92%E6%8C%AF%E3%81%A3%E3%81%9F%E9%96%A2%E6%95%B0%E3%82%92%E9%87%8D%E3%81%AD%E3%81%A6%E6%8F%8F%E3%81%8F\"><i class=\"fa fa-link\"></i></a>応用編: パラメータの値を振った関数を重ねて描く</h2>\n\n<p><a href=\"http://qiita.com/kazutan/items/28dbdee1d70b184b862c\">複数のggplot2要素を関数で渡したい</a>を参考にします。<br>\nまずはガンマ分布のshapeパラメータを1,3、rateパラメータを0.5, 1, 2で振って描いた例です。</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example3.R</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">library</span><span class=\"p\">(</span>ggplot2<span class=\"p\">)</span>\n\nab <span class=\"o\">&lt;-</span> <span class=\"kp\">expand.grid</span><span class=\"p\">(</span>a<span class=\"o\">=</span><span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">3</span><span class=\"p\">),</span> b<span class=\"o\">=</span><span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"m\">.5</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">2</span><span class=\"p\">))</span>\np <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span><span class=\"kt\">data.frame</span><span class=\"p\">(</span>X<span class=\"o\">=</span><span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">6</span><span class=\"p\">)),</span> aes<span class=\"p\">(</span>x<span class=\"o\">=</span>X<span class=\"p\">))</span> <span class=\"o\">+</span>\n  <span class=\"kp\">mapply</span><span class=\"p\">(</span>\n    <span class=\"kr\">function</span><span class=\"p\">(</span>a<span class=\"p\">,</span> b<span class=\"p\">,</span> co<span class=\"p\">)</span> stat_function<span class=\"p\">(</span>fun<span class=\"o\">=</span>dgamma<span class=\"p\">,</span> args<span class=\"o\">=</span><span class=\"kt\">list</span><span class=\"p\">(</span>shape<span class=\"o\">=</span>a<span class=\"p\">,</span> rate<span class=\"o\">=</span>b<span class=\"p\">),</span> aes_q<span class=\"p\">(</span>color<span class=\"o\">=</span>co<span class=\"p\">)),</span>\n    ab<span class=\"o\">$</span>a<span class=\"p\">,</span> ab<span class=\"o\">$</span>b<span class=\"p\">,</span> <span class=\"kp\">sprintf</span><span class=\"p\">(</span><span class=\"s\">\"a=%.0f b=%.1f\"</span><span class=\"p\">,</span> ab<span class=\"o\">$</span>a<span class=\"p\">,</span> ab<span class=\"o\">$</span>b<span class=\"p\">)</span>\n  <span class=\"p\">)</span>\np <span class=\"o\">&lt;-</span> p <span class=\"o\">+</span> labs<span class=\"p\">(</span>color<span class=\"o\">=</span><span class=\"s\">\"parameter\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p>こういう時はmapplyを使うと便利なのでした。<code>aes</code>は凡例（legend）をつけるために設定しています。ただし、普通の<code>aes</code>ではcoが列名と解釈されてしまうので、<code>aes_q</code>を使ってquoteされた文字列を渡せるようにしています。<code>aes_q</code>はggplot2の1.x系で新しく実装されたようです。</p>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/12869/a7896f88-fcbf-d2e3-7bdd-ac2c74d4cb0e.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/12869/a7896f88-fcbf-d2e3-7bdd-ac2c74d4cb0e.png\" alt=\"OK3.png\"></a></p>\n\n<p>次にガンマ分布でshapeパラメータは5で固定して、rateパラメータを0.5〜10で0.5刻みで変化させたものを描きます。</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example4.R</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">library</span><span class=\"p\">(</span>ggplot2<span class=\"p\">)</span>\n\nb <span class=\"o\">&lt;-</span> <span class=\"kp\">seq</span><span class=\"p\">(</span><span class=\"m\">.5</span><span class=\"p\">,</span> <span class=\"m\">10</span><span class=\"p\">,</span> by<span class=\"o\">=</span><span class=\"m\">.5</span><span class=\"p\">)</span>\np <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span><span class=\"kt\">data.frame</span><span class=\"p\">(</span>X<span class=\"o\">=</span><span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span> <span class=\"m\">6</span><span class=\"p\">)),</span> aes<span class=\"p\">(</span>x<span class=\"o\">=</span>X<span class=\"p\">))</span> <span class=\"o\">+</span>\n  <span class=\"kp\">mapply</span><span class=\"p\">(</span>\n    <span class=\"kr\">function</span><span class=\"p\">(</span>a<span class=\"p\">,</span> b<span class=\"p\">,</span> co<span class=\"p\">)</span> stat_function<span class=\"p\">(</span>fun<span class=\"o\">=</span>dgamma<span class=\"p\">,</span> args<span class=\"o\">=</span><span class=\"kt\">list</span><span class=\"p\">(</span>shape<span class=\"o\">=</span>a<span class=\"p\">,</span> rate<span class=\"o\">=</span>b<span class=\"p\">),</span> aes_q<span class=\"p\">(</span>color<span class=\"o\">=</span>co<span class=\"p\">)),</span>\n    <span class=\"m\">5</span><span class=\"p\">,</span> b<span class=\"p\">,</span> b\n  <span class=\"p\">)</span>\np <span class=\"o\">&lt;-</span> p <span class=\"o\">+</span> labs<span class=\"p\">(</span>color<span class=\"o\">=</span><span class=\"s\">\"b\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p><a href=\"https://qiita-image-store.s3.amazonaws.com/0/12869/3405f81f-881c-5bab-3dcc-f74ac9373570.png\" target=\"_blank\"><img src=\"https://qiita-image-store.s3.amazonaws.com/0/12869/3405f81f-881c-5bab-3dcc-f74ac9373570.png\" alt=\"OK4.png\"></a></p>\n\n<h1>\n<span id=\"参考資料\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83%E8%B3%87%E6%96%99\"><i class=\"fa fa-link\"></i></a>参考資料</h1>\n\n<p><a href=\"http://docs.ggplot2.org/current/stat_function.html\">http://docs.ggplot2.org/current/stat_function.html</a><br>\n<a href=\"http://d.hatena.ne.jp/dichika/20111117/1321491147\">http://d.hatena.ne.jp/dichika/20111117/1321491147</a><br>\n<a href=\"http://stackoverflow.com/questions/17649759/fitting-gaussian-to-data-geom-point-in-ggplot2/\">http://stackoverflow.com/questions/17649759/fitting-gaussian-to-data-geom-point-in-ggplot2/</a><br>\n<a href=\"http://docs.ggplot2.org/dev/aes_string.html\">http://docs.ggplot2.org/dev/aes_string.html</a></p>\n","body":"# Q.\n正規分布とか二次曲線とか好きな関数の曲線を描きたいのですが。\n\n# A.\n## 基本\n`stat_function`を使うのがお手軽です。\n\n```OK_example1.R\nlibrary(ggplot2)\n\np <- ggplot(data=data.frame(X=c(-4,4)), aes(x=X))\np <- p + stat_function(fun=dnorm)\np <- p + stat_function(fun=dnorm, args=list(mean=2, sd=.5))\np <- p + stat_function(fun=function(x) 0.01*x^2-0.1)\n```\n\n`ggplot`で描画範囲を指定して、`stat_function`の`fun=`で関数を指定します。関数に引数がある場合は`args=`で`list`を渡します。\n![OK1.png](https://qiita-image-store.s3.amazonaws.com/0/12869/b4f1875a-0b44-e13f-afa1-5acc8f75c812.png)\n\n## 例外: 関数ごとに描画範囲が異なる場合\n`geom_path`を使います。\n\n```OK_example2.R\nlibrary(ggplot2)\n\np <- ggplot(aes(x=X,y=Y))\np <- p + geom_path(data=data.frame(X=x<-seq(-2,2,len=101), Y=dnorm(x)))\np <- p + geom_path(data=data.frame(X=x<-seq(-3,3,len=101), Y=dnorm(x, mean=2, sd=.5)))\np <- p + geom_path(data=data.frame(X=x<-seq(-4,4,len=101), Y=0.01*x^2-0.1))\n```\nX軸の値とY軸の値を持つ`data.frame`を作って`geom_path`に渡して線分がつながったものとして描画します。上のコード例では`geom_path`内で`x`に値を代入しつつ`data.frame`にしているおかげで、後ろの`dnorm`でその`x`を使える点に注意です。\n\n![OK2.png](https://qiita-image-store.s3.amazonaws.com/0/12869/c6c74bbf-f459-d0ac-576e-cf53cfacb3ca.png)\n\n## 応用編: パラメータの値を振った関数を重ねて描く\n[複数のggplot2要素を関数で渡したい](http://qiita.com/kazutan/items/28dbdee1d70b184b862c)を参考にします。\nまずはガンマ分布のshapeパラメータを1,3、rateパラメータを0.5, 1, 2で振って描いた例です。\n\n```OK_example3.R\nlibrary(ggplot2)\n\nab <- expand.grid(a=c(1, 3), b=c(.5, 1, 2))\np <- ggplot(data.frame(X=c(0, 6)), aes(x=X)) +\n  mapply(\n    function(a, b, co) stat_function(fun=dgamma, args=list(shape=a, rate=b), aes_q(color=co)),\n    ab$a, ab$b, sprintf(\"a=%.0f b=%.1f\", ab$a, ab$b)\n  )\np <- p + labs(color=\"parameter\")\n```\n\nこういう時はmapplyを使うと便利なのでした。`aes`は凡例（legend）をつけるために設定しています。ただし、普通の`aes`ではcoが列名と解釈されてしまうので、`aes_q`を使ってquoteされた文字列を渡せるようにしています。`aes_q`はggplot2の1.x系で新しく実装されたようです。\n\n![OK3.png](https://qiita-image-store.s3.amazonaws.com/0/12869/a7896f88-fcbf-d2e3-7bdd-ac2c74d4cb0e.png)\n\n次にガンマ分布でshapeパラメータは5で固定して、rateパラメータを0.5〜10で0.5刻みで変化させたものを描きます。\n\n```OK_example4.R\nlibrary(ggplot2)\n\nb <- seq(.5, 10, by=.5)\np <- ggplot(data.frame(X=c(0, 6)), aes(x=X)) +\n  mapply(\n    function(a, b, co) stat_function(fun=dgamma, args=list(shape=a, rate=b), aes_q(color=co)),\n    5, b, b\n  )\np <- p + labs(color=\"b\")\n```\n\n![OK4.png](https://qiita-image-store.s3.amazonaws.com/0/12869/3405f81f-881c-5bab-3dcc-f74ac9373570.png)\n\n# 参考資料\nhttp://docs.ggplot2.org/current/stat_function.html\nhttp://d.hatena.ne.jp/dichika/20111117/1321491147\nhttp://stackoverflow.com/questions/17649759/fitting-gaussian-to-data-geom-point-in-ggplot2/\nhttp://docs.ggplot2.org/dev/aes_string.html\n","coediting":false,"created_at":"2015-07-31T18:56:14+09:00","id":"a6522a6e6561f8ca7b96","private":false,"tags":[{"name":"R","versions":[]},{"name":"ggplot2逆引き","versions":[]}],"title":"正規分布など好きな関数の曲線を描きたい","updated_at":"2015-08-01T11:37:55+09:00","url":"http://qiita.com/berobero11/items/a6522a6e6561f8ca7b96","user":{"description":{},"facebook_id":{},"followees_count":38,"followers_count":23,"github_login_name":{},"id":"berobero11","items_count":6,"linkedin_id":{},"location":{},"name":"","organization":{},"permanent_id":12869,"profile_image_url":"https://pbs.twimg.com/profile_images/620606111159181313/If4Pg1hB_normal.png","twitter_screen_name":"berobero11","website_url":{}}},{"rendered_body":"\n<h1>\n<span id=\"q\" class=\"fragment\"></span><a href=\"#q\"><i class=\"fa fa-link\"></i></a>Q.</h1>\n\n<p>ggplot2のデフォルトの色を知りたいです。RGBも知りたいです。</p>\n\n<h1>\n<span id=\"a\" class=\"fragment\"></span><a href=\"#a\"><i class=\"fa fa-link\"></i></a>A.</h1>\n\n<p>以下のコードで知ることができます。</p>\n\n<h2>\n<span id=\"色分けの基準がfactorの場合\" class=\"fragment\"></span><a href=\"#%E8%89%B2%E5%88%86%E3%81%91%E3%81%AE%E5%9F%BA%E6%BA%96%E3%81%8Cfactor%E3%81%AE%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>色分けの基準がfactorの場合</h2>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example1.R</span></div>\n<div class=\"highlight\"><pre>ggColorHue <span class=\"o\">&lt;-</span> <span class=\"kr\">function</span><span class=\"p\">(</span>n<span class=\"p\">,</span> l<span class=\"o\">=</span><span class=\"m\">65</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  hues <span class=\"o\">&lt;-</span> <span class=\"kp\">seq</span><span class=\"p\">(</span><span class=\"m\">15</span><span class=\"p\">,</span> <span class=\"m\">375</span><span class=\"p\">,</span> length<span class=\"o\">=</span>n<span class=\"m\">+1</span><span class=\"p\">)</span>\n  hcl<span class=\"p\">(</span>h<span class=\"o\">=</span>hues<span class=\"p\">,</span> l<span class=\"o\">=</span>l<span class=\"p\">,</span> <span class=\"kt\">c</span><span class=\"o\">=</span><span class=\"m\">100</span><span class=\"p\">)[</span><span class=\"m\">1</span><span class=\"o\">:</span>n<span class=\"p\">]</span>\n<span class=\"p\">}</span>\n\ncols       <span class=\"o\">&lt;-</span> ggColorHue<span class=\"p\">(</span>n<span class=\"o\">=</span><span class=\"m\">4</span><span class=\"p\">)</span>\ncols_dark  <span class=\"o\">&lt;-</span> ggColorHue<span class=\"p\">(</span>n<span class=\"o\">=</span><span class=\"m\">4</span><span class=\"p\">,</span> l<span class=\"o\">=</span><span class=\"m\">45</span><span class=\"p\">)</span>\ncols_light <span class=\"o\">&lt;-</span> ggColorHue<span class=\"p\">(</span>n<span class=\"o\">=</span><span class=\"m\">4</span><span class=\"p\">,</span> l<span class=\"o\">=</span><span class=\"m\">85</span><span class=\"p\">)</span>\n\ncol2rgb<span class=\"p\">(</span>cols<span class=\"p\">)</span>\nscales<span class=\"o\">::</span>show_col<span class=\"p\">(</span>cols<span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p>col2rgbはrgbを計算するのに使っています。最後の行の結果は以下の通りです。<br>\n<img src=\"https://qiita-image-store.s3.amazonaws.com/0/12869/18f01181-0588-3e2a-b191-34733480edad.png\" alt=\"OK1.png\"></p>\n\n<h2>\n<span id=\"色分けの基準が連続値の場合\" class=\"fragment\"></span><a href=\"#%E8%89%B2%E5%88%86%E3%81%91%E3%81%AE%E5%9F%BA%E6%BA%96%E3%81%8C%E9%80%A3%E7%B6%9A%E5%80%A4%E3%81%AE%E5%A0%B4%E5%90%88\"><i class=\"fa fa-link\"></i></a>色分けの基準が連続値の場合</h2>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example2.R</span></div>\n<div class=\"highlight\"><pre>cols <span class=\"o\">&lt;-</span> colorRampPalette<span class=\"p\">(</span><span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"s\">\"#132B43\"</span><span class=\"p\">,</span> <span class=\"s\">\"#56B1F7\"</span><span class=\"p\">))(</span>n<span class=\"o\">=</span><span class=\"m\">25</span><span class=\"p\">)</span>\ncol2rgb<span class=\"p\">(</span>cols<span class=\"p\">)</span>\nscales<span class=\"o\">::</span>show_col<span class=\"p\">(</span>cols<span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p>n=25はテキトーです。</p>\n\n<p><img src=\"https://qiita-image-store.s3.amazonaws.com/0/12869/5ab1da44-5ce1-b969-0440-706e5ac14cce.png\" alt=\"OK2.png\"></p>\n\n<h1>\n<span id=\"参考資料\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83%E8%B3%87%E6%96%99\"><i class=\"fa fa-link\"></i></a>参考資料</h1>\n\n<p><a href=\"http://stackoverflow.com/questions/8197559/emulate-ggplot2-default-color-palette\">http://stackoverflow.com/questions/8197559/emulate-ggplot2-default-color-palette</a><br>\n<a href=\"http://docs.ggplot2.org/current/scale_gradient.html\">http://docs.ggplot2.org/current/scale_gradient.html</a></p>\n","body":"# Q. \nggplot2のデフォルトの色を知りたいです。RGBも知りたいです。\n\n# A.\n以下のコードで知ることができます。\n\n## 色分けの基準がfactorの場合\n```OK_example1.R\nggColorHue <- function(n, l=65) {\n  hues <- seq(15, 375, length=n+1)\n  hcl(h=hues, l=l, c=100)[1:n]\n}\n\ncols       <- ggColorHue(n=4)\ncols_dark  <- ggColorHue(n=4, l=45)\ncols_light <- ggColorHue(n=4, l=85)\n\ncol2rgb(cols)\nscales::show_col(cols)\n```\n\ncol2rgbはrgbを計算するのに使っています。最後の行の結果は以下の通りです。\n![OK1.png](https://qiita-image-store.s3.amazonaws.com/0/12869/18f01181-0588-3e2a-b191-34733480edad.png)\n\n## 色分けの基準が連続値の場合\n```OK_example2.R\ncols <- colorRampPalette(c(\"#132B43\", \"#56B1F7\"))(n=25)\ncol2rgb(cols)\nscales::show_col(cols)\n```\n\nn=25はテキトーです。\n\n![OK2.png](https://qiita-image-store.s3.amazonaws.com/0/12869/5ab1da44-5ce1-b969-0440-706e5ac14cce.png)\n\n# 参考資料\nhttp://stackoverflow.com/questions/8197559/emulate-ggplot2-default-color-palette\nhttp://docs.ggplot2.org/current/scale_gradient.html\n","coediting":false,"created_at":"2015-07-29T20:53:55+09:00","id":"c569da6dbf568032e04a","private":false,"tags":[{"name":"R","versions":[]},{"name":"ggplot2逆引き","versions":[]}],"title":"ggplot2のデフォルトの色を知りたい","updated_at":"2015-07-29T23:35:14+09:00","url":"http://qiita.com/berobero11/items/c569da6dbf568032e04a","user":{"description":{},"facebook_id":{},"followees_count":38,"followers_count":23,"github_login_name":{},"id":"berobero11","items_count":6,"linkedin_id":{},"location":{},"name":"","organization":{},"permanent_id":12869,"profile_image_url":"https://pbs.twimg.com/profile_images/620606111159181313/If4Pg1hB_normal.png","twitter_screen_name":"berobero11","website_url":{}}},{"rendered_body":"\n<h2>\n<span id=\"q\" class=\"fragment\"></span><a href=\"#q\"><i class=\"fa fa-link\"></i></a>Q</h2>\n\n<p>複数のggplot2の要素を加えたいのですが、以下のように手動でやるとうまくいきます:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">manual_example.R</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">require</span><span class=\"p\">(</span>ggplot2<span class=\"p\">)</span>\np <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>aes<span class=\"p\">(</span>x <span class=\"o\">=</span> mpg<span class=\"p\">,</span> y <span class=\"o\">=</span> hp<span class=\"p\">),</span> data <span class=\"o\">=</span> mtcars<span class=\"p\">)</span>\np <span class=\"o\">+</span> geom_vline<span class=\"p\">(</span>xintercept <span class=\"o\">=</span> <span class=\"m\">20</span><span class=\"p\">)</span> <span class=\"o\">+</span> geom_point<span class=\"p\">(</span>data <span class=\"o\">=</span> mtcars<span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/479c53c3-af0d-dd22-22bc-0cd975a077ee.png\" alt=\"manual_exsample.R-1.png\"></p>\n\n<p>でも、これ関数に持たせようと思って以下のようにしてみるとエラーがでます:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">NG_example.R</span></div>\n<div class=\"highlight\"><pre>myFunction <span class=\"o\">&lt;-</span> <span class=\"kr\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n  <span class=\"kr\">return</span><span class=\"p\">(</span>\n    geom_vline<span class=\"p\">(</span>xintercept <span class=\"o\">=</span> <span class=\"m\">20</span><span class=\"p\">)</span> <span class=\"o\">+</span> geom_point<span class=\"p\">(</span>data <span class=\"o\">=</span> mtcars<span class=\"p\">)</span>\n  <span class=\"p\">)</span>\n<span class=\"p\">}</span>\np <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>aes<span class=\"p\">(</span>x <span class=\"o\">=</span> mpg<span class=\"p\">,</span> y <span class=\"o\">=</span> hp<span class=\"p\">),</span> data <span class=\"o\">=</span> mtcars<span class=\"p\">)</span>\n<span class=\"c1\"># p + myFunction()</span>\n<span class=\"c1\"># ここで以下のエラーがでます:</span>\n<span class=\"c1\"># \"エラー: 二項演算子の引数が数値ではありません\"</span>\n</pre></div>\n</div>\n\n<p>ggplot2に関数の戻り値で複数の要素を放り込むにはどうしたらいいでしょうか?</p>\n\n<h2>\n<span id=\"a\" class=\"fragment\"></span><a href=\"#a\"><i class=\"fa fa-link\"></i></a>A</h2>\n\n<p>ggplot2は要素の「リスト」をサポートしています:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example.R</span></div>\n<div class=\"highlight\"><pre>myFunction <span class=\"o\">&lt;-</span> <span class=\"kr\">function</span><span class=\"p\">()</span>\n <span class=\"kt\">list</span><span class=\"p\">(</span>geom_vline<span class=\"p\">(</span>xintercept <span class=\"o\">=</span> <span class=\"m\">20</span><span class=\"p\">),</span>\n      geom_point<span class=\"p\">(</span>data <span class=\"o\">=</span> mtcars<span class=\"p\">))</span>\n\np <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>aes<span class=\"p\">(</span>x <span class=\"o\">=</span> mpg<span class=\"p\">,</span> y <span class=\"o\">=</span> hp<span class=\"p\">),</span> data <span class=\"o\">=</span> mtcars<span class=\"p\">)</span>\np <span class=\"o\">+</span> myFunction<span class=\"p\">()</span>\n</pre></div>\n</div>\n\n<p><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/f20ab9e6-8412-d788-e14e-7e1a1140ff5a.png\" alt=\"OK_example.R-1.png\"></p>\n\n<p>このように各要素をリストとしてまとめ、\"+\"で追加するとうまく組み込まれます。このgeom_*以外にも、\"+\"で束ねることができるものであれば同様にlistとして渡すことができます。</p>\n\n<p>またこれを利用すれば、事前にggplot2の要素をまとめておいてデータセットだけ切り替えるなど、非常に応用がききます。</p>\n\n<h2>\n<span id=\"応用\" class=\"fragment\"></span><a href=\"#%E5%BF%9C%E7%94%A8\"><i class=\"fa fa-link\"></i></a>応用</h2>\n\n<h3>\n<span id=\"要素のリストを使いまわす\" class=\"fragment\"></span><a href=\"#%E8%A6%81%E7%B4%A0%E3%81%AE%E3%83%AA%E3%82%B9%E3%83%88%E3%82%92%E4%BD%BF%E3%81%84%E3%81%BE%E3%82%8F%E3%81%99\"><i class=\"fa fa-link\"></i></a>要素のリストを使いまわす</h3>\n\n<p>「ggplot2は要素のリストをサポートする」ことを応用すれば、以下のようなことができます:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">layer_example.R</span></div>\n<div class=\"highlight\"><pre>lay <span class=\"o\">=</span> <span class=\"kt\">list</span><span class=\"p\">(</span>stat_summary<span class=\"p\">(</span>fun.y <span class=\"o\">=</span> <span class=\"kp\">mean</span><span class=\"p\">,</span> geom <span class=\"o\">=</span> <span class=\"s\">\"line\"</span><span class=\"p\">),</span>\n           stat_summary<span class=\"p\">(</span>fun.data <span class=\"o\">=</span> mean_se<span class=\"p\">))</span>\n\nggplot<span class=\"p\">(</span>mtcars<span class=\"p\">,</span> aes<span class=\"p\">(</span>am<span class=\"p\">,</span> mpg<span class=\"p\">,</span> colour <span class=\"o\">=</span> <span class=\"kp\">factor</span><span class=\"p\">(</span>vs<span class=\"p\">),</span> group<span class=\"o\">=</span><span class=\"kp\">factor</span><span class=\"p\">(</span>vs<span class=\"p\">)))</span> <span class=\"o\">+</span> lay\nggplot<span class=\"p\">(</span>iris<span class=\"p\">,</span> aes<span class=\"p\">(</span>Species<span class=\"p\">,</span> Sepal.Length<span class=\"p\">,</span> group<span class=\"o\">=</span><span class=\"m\">1</span><span class=\"p\">))</span> <span class=\"o\">+</span> lay\n</pre></div>\n</div>\n\n<p><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/108f94cd-10db-dd6d-04d5-d8d1c58e24bd.png\" alt=\"layer_example.R-1.png\"><br>\n<img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/71ed5b6b-f347-f854-0005-cac60ba4ba30.png\" alt=\"layer_example.R-2.png\"></p>\n\n<p>このコードでは、「折れ線グラフでxの各点における標準誤差も描く」というのを繰り返し利用するため、それらを表現するggplot2要素をlayというlistに束ねています。こうすることで、\"+ lay\"と追加することで簡単に描くことができます。</p>\n\n<h3>\n<span id=\"繰り返しを関数にしてlapplyでリストで受け取る\" class=\"fragment\"></span><a href=\"#%E7%B9%B0%E3%82%8A%E8%BF%94%E3%81%97%E3%82%92%E9%96%A2%E6%95%B0%E3%81%AB%E3%81%97%E3%81%A6lapply%E3%81%A7%E3%83%AA%E3%82%B9%E3%83%88%E3%81%A7%E5%8F%97%E3%81%91%E5%8F%96%E3%82%8B\"><i class=\"fa fa-link\"></i></a>繰り返しを関数にして、lapplyでリストで受け取る</h3>\n\n<p>また、繰り返し処理を行いたいときは、lapplyで記述することも可能です:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">repeat_example.R</span></div>\n<div class=\"highlight\"><pre>p <span class=\"o\">&lt;-</span> ggplot<span class=\"p\">(</span>iris<span class=\"p\">,</span> aes<span class=\"p\">(</span>y<span class=\"o\">=</span>Sepal.Width<span class=\"p\">,</span> x<span class=\"o\">=</span>Species<span class=\"p\">))</span> <span class=\"o\">+</span>\n  stat_summary<span class=\"p\">(</span>fun.y<span class=\"o\">=</span><span class=\"kp\">mean</span><span class=\"p\">,</span> geom <span class=\"o\">=</span> <span class=\"s\">\"bar\"</span><span class=\"p\">)</span> <span class=\"o\">+</span> \n  ylim<span class=\"p\">(</span><span class=\"m\">0</span><span class=\"p\">,</span><span class=\"m\">6</span><span class=\"p\">)</span> <span class=\"o\">+</span> \n  <span class=\"kp\">lapply</span><span class=\"p\">(</span><span class=\"m\">1</span><span class=\"o\">:</span><span class=\"m\">3</span><span class=\"p\">,</span> <span class=\"kr\">function</span><span class=\"p\">(</span>i<span class=\"p\">)</span> geom_segment<span class=\"p\">(</span>x<span class=\"o\">=</span>i<span class=\"m\">-0.4</span><span class=\"p\">,</span> y<span class=\"o\">=</span><span class=\"m\">7</span><span class=\"o\">-</span>i<span class=\"p\">,</span> xend<span class=\"o\">=</span>i<span class=\"m\">+0.4</span><span class=\"p\">,</span> yend<span class=\"o\">=</span><span class=\"m\">7</span><span class=\"o\">-</span>i<span class=\"p\">))</span>\np\n</pre></div>\n</div>\n\n<p><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/dd2bf5d2-250d-db7f-0af9-6d59497c63fd.png\" alt=\"repeat_example.R-1.png\"></p>\n\n<p>繰り返し処理をしたい場合、<code>for(i in 1:3)</code>などで実行するとうまくいきません。ですが、繰り返したい処理を関数にしてlapplyで実行するようにすれば、返り値はlistになるのでちゃんと要素の内容が当たるようになります。</p>\n\n<h3>\n<span id=\"mapplyで複数の引数がある関数を繰り返す\" class=\"fragment\"></span><a href=\"#mapply%E3%81%A7%E8%A4%87%E6%95%B0%E3%81%AE%E5%BC%95%E6%95%B0%E3%81%8C%E3%81%82%E3%82%8B%E9%96%A2%E6%95%B0%E3%82%92%E7%B9%B0%E3%82%8A%E8%BF%94%E3%81%99\"><i class=\"fa fa-link\"></i></a>mapplyで複数の引数がある関数を繰り返す</h3>\n\n<p>もし複数の引数が必要ならば、mapplyを利用する方法もあります:</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">mapply_example.R</span></div>\n<div class=\"highlight\"><pre>p <span class=\"o\">=</span> ggplot<span class=\"p\">(</span><span class=\"kt\">data.frame</span><span class=\"p\">(</span>x <span class=\"o\">=</span> <span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"m\">-10</span><span class=\"p\">,</span> <span class=\"m\">10</span><span class=\"p\">)),</span> aes<span class=\"p\">(</span>x<span class=\"p\">))</span> <span class=\"o\">+</span>\n  <span class=\"kp\">mapply</span><span class=\"p\">(</span><span class=\"kr\">function</span><span class=\"p\">(</span>m<span class=\"p\">,</span> s<span class=\"p\">,</span> co<span class=\"p\">)</span> stat_function<span class=\"p\">(</span>fun <span class=\"o\">=</span> dnorm<span class=\"p\">,</span> args <span class=\"o\">=</span> <span class=\"kt\">list</span><span class=\"p\">(</span>mean <span class=\"o\">=</span> m<span class=\"p\">,</span> sd <span class=\"o\">=</span> s<span class=\"p\">),</span> colour <span class=\"o\">=</span> co<span class=\"p\">),</span> \n         <span class=\"m\">-1</span><span class=\"o\">:</span><span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"kt\">c</span><span class=\"p\">(</span><span class=\"m\">0.5</span><span class=\"p\">,</span> <span class=\"m\">1</span><span class=\"p\">,</span> <span class=\"m\">1.5</span><span class=\"p\">),</span> rainbow<span class=\"p\">(</span><span class=\"m\">3</span><span class=\"p\">))</span>\np\n</pre></div>\n</div>\n\n<p><img src=\"https://qiita-image-store.s3.amazonaws.com/0/35118/f646a265-ab16-0ef0-750e-8d822a16c09c.png\" alt=\"mapply_example.R-1.png\"></p>\n\n<p>mapplyは第一引数の関数に対し、それ以降の引数を当てて実行し、その結果をlistで返してきます。なので上の例のように、パラメータを変化させながら重ね書きする時などはきっと重宝するでしょう。</p>\n\n<p>これらはほんの一例ですので、ぜひ色々試してみてください。</p>\n\n<h2>\n<span id=\"参考資料\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83%E8%B3%87%E6%96%99\"><i class=\"fa fa-link\"></i></a>参考資料</h2>\n\n<p>この記事は、以下のstackoverflowの内容を参考に書き起こしました:</p>\n\n<ul>\n<li><a href=\"http://stackoverflow.com/questions/4835332/how-can-i-combine-multiple-ggplot2-elements-into-the-return-of-a-function\">r - How can I combine multiple ggplot2 elements into the return of a function? - Stack Overflow</a></li>\n</ul>\n","body":"## Q\n\n複数のggplot2の要素を加えたいのですが、以下のように手動でやるとうまくいきます:\n\n```r:manual_example.R\nrequire(ggplot2)\np <- ggplot(aes(x = mpg, y = hp), data = mtcars)\np + geom_vline(xintercept = 20) + geom_point(data = mtcars)\n```\n![manual_exsample.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/479c53c3-af0d-dd22-22bc-0cd975a077ee.png)\n\nでも、これ関数に持たせようと思って以下のようにしてみるとエラーがでます:\n\n```r:NG_example.R\nmyFunction <- function() {\n  return(\n    geom_vline(xintercept = 20) + geom_point(data = mtcars)\n  )\n}\np <- ggplot(aes(x = mpg, y = hp), data = mtcars)\n# p + myFunction()\n# ここで以下のエラーがでます:\n# \"エラー: 二項演算子の引数が数値ではありません\"\n```\n\nggplot2に関数の戻り値で複数の要素を放り込むにはどうしたらいいでしょうか?\n\n## A\n\nggplot2は要素の「リスト」をサポートしています:\n\n```r:OK_example.R\nmyFunction <- function()\n list(geom_vline(xintercept = 20),\n      geom_point(data = mtcars))\n\np <- ggplot(aes(x = mpg, y = hp), data = mtcars)\np + myFunction()\n```\n![OK_example.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/f20ab9e6-8412-d788-e14e-7e1a1140ff5a.png)\n\nこのように各要素をリストとしてまとめ、\"+\"で追加するとうまく組み込まれます。このgeom_*以外にも、\"+\"で束ねることができるものであれば同様にlistとして渡すことができます。\n\nまたこれを利用すれば、事前にggplot2の要素をまとめておいてデータセットだけ切り替えるなど、非常に応用がききます。\n\n## 応用\n\n### 要素のリストを使いまわす\n「ggplot2は要素のリストをサポートする」ことを応用すれば、以下のようなことができます:\n\n\n```r:layer_example.R\nlay = list(stat_summary(fun.y = mean, geom = \"line\"),\n           stat_summary(fun.data = mean_se))\n\nggplot(mtcars, aes(am, mpg, colour = factor(vs), group=factor(vs))) + lay\nggplot(iris, aes(Species, Sepal.Length, group=1)) + lay\n```\n![layer_example.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/108f94cd-10db-dd6d-04d5-d8d1c58e24bd.png)\n![layer_example.R-2.png](https://qiita-image-store.s3.amazonaws.com/0/35118/71ed5b6b-f347-f854-0005-cac60ba4ba30.png)\n\nこのコードでは、「折れ線グラフでxの各点における標準誤差も描く」というのを繰り返し利用するため、それらを表現するggplot2要素をlayというlistに束ねています。こうすることで、\"+ lay\"と追加することで簡単に描くことができます。\n\n### 繰り返しを関数にして、lapplyでリストで受け取る\nまた、繰り返し処理を行いたいときは、lapplyで記述することも可能です:\n\n\n```r:repeat_example.R\np <- ggplot(iris, aes(y=Sepal.Width, x=Species)) +\n  stat_summary(fun.y=mean, geom = \"bar\") + \n  ylim(0,6) + \n  lapply(1:3, function(i) geom_segment(x=i-0.4, y=7-i, xend=i+0.4, yend=7-i))\np\n```\n![repeat_example.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/dd2bf5d2-250d-db7f-0af9-6d59497c63fd.png)\n\n繰り返し処理をしたい場合、`for(i in 1:3)`などで実行するとうまくいきません。ですが、繰り返したい処理を関数にしてlapplyで実行するようにすれば、返り値はlistになるのでちゃんと要素の内容が当たるようになります。\n\n### mapplyで複数の引数がある関数を繰り返す\nもし複数の引数が必要ならば、mapplyを利用する方法もあります:\n\n\n```r:mapply_example.R\np = ggplot(data.frame(x = c(-10, 10)), aes(x)) +\n  mapply(function(m, s, co) stat_function(fun = dnorm, args = list(mean = m, sd = s), colour = co), \n         -1:1, c(0.5, 1, 1.5), rainbow(3))\np\n```\n![mapply_example.R-1.png](https://qiita-image-store.s3.amazonaws.com/0/35118/f646a265-ab16-0ef0-750e-8d822a16c09c.png)\n\nmapplyは第一引数の関数に対し、それ以降の引数を当てて実行し、その結果をlistで返してきます。なので上の例のように、パラメータを変化させながら重ね書きする時などはきっと重宝するでしょう。\n\nこれらはほんの一例ですので、ぜひ色々試してみてください。\n\n## 参考資料\n\nこの記事は、以下のstackoverflowの内容を参考に書き起こしました:\n\n- [r - How can I combine multiple ggplot2 elements into the return of a function? - Stack Overflow](http://stackoverflow.com/questions/4835332/how-can-i-combine-multiple-ggplot2-elements-into-the-return-of-a-function)\n","coediting":false,"created_at":"2015-07-29T14:09:23+09:00","id":"28dbdee1d70b184b862c","private":false,"tags":[{"name":"R","versions":[]},{"name":"ggplot2逆引き","versions":[]}],"title":"複数のggplot2要素を関数で渡したい","updated_at":"2015-07-29T19:22:37+09:00","url":"http://qiita.com/kazutan/items/28dbdee1d70b184b862c","user":{"description":"ただの残念なぞうさんです。同名のTwitterアカウントでほそぼそと。","facebook_id":"","followees_count":5,"followers_count":8,"github_login_name":"kazutan","id":"kazutan","items_count":9,"linkedin_id":"","location":"Hiroshima, Japan","name":"Maeda Kazuhiro","organization":"Hijiyama University","permanent_id":35118,"profile_image_url":"https://avatars.githubusercontent.com/u/10094206?v=3","twitter_screen_name":"kazutan","website_url":"http://kz-md.net/"}},{"rendered_body":"\n<h1>\n<span id=\"q\" class=\"fragment\"></span><a href=\"#q\"><i class=\"fa fa-link\"></i></a>Q.</h1>\n\n<p>複数のhistogramを重ねて1枚の図の中に描きたいです。density plotだとうまくいくんですけど、histogramだと以下みたいに積み上げ棒グラフになっちゃってうまくいかないんです。</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">NG_example.R</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">library</span><span class=\"p\">(</span>ggplot2<span class=\"p\">)</span>\n\nggplot<span class=\"p\">(</span>data<span class=\"o\">=</span>iris<span class=\"p\">,</span> aes<span class=\"p\">(</span>x<span class=\"o\">=</span>Sepal.Length<span class=\"p\">,</span> fill<span class=\"o\">=</span>Species<span class=\"p\">))</span> <span class=\"o\">+</span> geom_histogram<span class=\"p\">(</span>alpha<span class=\"o\">=</span><span class=\"m\">0.4</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p><img src=\"https://qiita-image-store.s3.amazonaws.com/0/12869/a3130e1c-f0f4-720b-43d5-dd3bce565d49.png\" alt=\"NG.png\"></p>\n\n<h1>\n<span id=\"a\" class=\"fragment\"></span><a href=\"#a\"><i class=\"fa fa-link\"></i></a>A.</h1>\n\n<p><code>geom_histogram</code>のデフォルトのpositionが<code>stack</code>なのが原因です。<br>\n<a href=\"http://docs.ggplot2.org/current/geom_histogram.html\">http://docs.ggplot2.org/current/geom_histogram.html</a><br>\n<code>identity</code>を指定することで望みの図を得ることができます。</p>\n\n<div class=\"code-frame\" data-lang=\"r\">\n<div class=\"code-lang\"><span class=\"bold\">OK_example.R</span></div>\n<div class=\"highlight\"><pre><span class=\"kn\">library</span><span class=\"p\">(</span>ggplot2<span class=\"p\">)</span>\n\nggplot<span class=\"p\">(</span>data<span class=\"o\">=</span>iris<span class=\"p\">,</span> aes<span class=\"p\">(</span>x<span class=\"o\">=</span>Sepal.Length<span class=\"p\">,</span> fill<span class=\"o\">=</span>Species<span class=\"p\">))</span> <span class=\"o\">+</span> geom_histogram<span class=\"p\">(</span>alpha<span class=\"o\">=</span><span class=\"m\">0.4</span><span class=\"p\">,</span> position<span class=\"o\">=</span><span class=\"s\">\"identity\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n\n<p><img src=\"https://qiita-image-store.s3.amazonaws.com/0/12869/3417c464-f6fb-f283-2b54-1030647a3c82.png\" alt=\"OK.png\"></p>\n\n<p><code>position</code>の詳細については以下のページの「Position adjustments」のところを見てください。<br>\n<a href=\"http://docs.ggplot2.org/current/\">http://docs.ggplot2.org/current/</a></p>\n\n<h1>\n<span id=\"参考資料\" class=\"fragment\"></span><a href=\"#%E5%8F%82%E8%80%83%E8%B3%87%E6%96%99\"><i class=\"fa fa-link\"></i></a>参考資料</h1>\n\n<p><a href=\"http://stackoverflow.com/questions/6957549/overlaying-histograms-with-ggplot2-in-r/\">http://stackoverflow.com/questions/6957549/overlaying-histograms-with-ggplot2-in-r/</a></p>\n","body":"# Q. \n複数のhistogramを重ねて1枚の図の中に描きたいです。density plotだとうまくいくんですけど、histogramだと以下みたいに積み上げ棒グラフになっちゃってうまくいかないんです。\n\n```NG_example.R\nlibrary(ggplot2)\n\nggplot(data=iris, aes(x=Sepal.Length, fill=Species)) + geom_histogram(alpha=0.4)\n```\n\n![NG.png](https://qiita-image-store.s3.amazonaws.com/0/12869/a3130e1c-f0f4-720b-43d5-dd3bce565d49.png)\n\n\n# A. \n`geom_histogram`のデフォルトのpositionが`stack`なのが原因です。\nhttp://docs.ggplot2.org/current/geom_histogram.html\n`identity`を指定することで望みの図を得ることができます。\n\n```OK_example.R\nlibrary(ggplot2)\n\nggplot(data=iris, aes(x=Sepal.Length, fill=Species)) + geom_histogram(alpha=0.4, position=\"identity\")\n```\n\n![OK.png](https://qiita-image-store.s3.amazonaws.com/0/12869/3417c464-f6fb-f283-2b54-1030647a3c82.png)\n\n\n`position`の詳細については以下のページの「Position adjustments」のところを見てください。\nhttp://docs.ggplot2.org/current/\n\n# 参考資料\nhttp://stackoverflow.com/questions/6957549/overlaying-histograms-with-ggplot2-in-r/\n","coediting":false,"created_at":"2015-07-28T13:37:59+09:00","id":"22bd91447b4fe68cb3df","private":false,"tags":[{"name":"R","versions":[]},{"name":"ggplot2逆引き","versions":[]}],"title":"複数のhistogramを重ねて描きたい","updated_at":"2015-07-29T23:35:31+09:00","url":"http://qiita.com/berobero11/items/22bd91447b4fe68cb3df","user":{"description":{},"facebook_id":{},"followees_count":38,"followers_count":23,"github_login_name":{},"id":"berobero11","items_count":6,"linkedin_id":{},"location":{},"name":"","organization":{},"permanent_id":12869,"profile_image_url":"https://pbs.twimg.com/profile_images/620606111159181313/If4Pg1hB_normal.png","twitter_screen_name":"berobero11","website_url":{}}}]